const fs=require("fs"),path=require("path"),customDataSchema={version:1.1,globalAttributes:[{name:"data-i18n",description:"The key of the translation for current element."},{name:"data-i18n-prop",description:"Attributes of the element that should be translated, separated by space.",valueSet:"i18nProps"},{name:"data-hint",description:"The tooltip of the element."}],valueSets:[]},generateHTMLIntellisense=async()=>{await new Promise(((e,t)=>{fs.readFile("src/livecodes/i18n/locales/models.ts","utf8",((a,s)=>{if(a)console.error(a),t(a);else{const t=s.match(/I18nAttributes.+?{([\s\S]*?)}/)[1].split("\n").map((e=>e.trim().replace(/['|;?]/g,"").split(":")[0])).filter((e=>""!==e));customDataSchema.valueSets.push({name:customDataSchema.globalAttributes[1].valueSet,values:t.map((e=>({name:e})))}),e()}}))}));const e=path.resolve(__dirname,"../.vscode/html.html-data.json");fs.writeFileSync(e,JSON.stringify(customDataSchema,null,2)),console.log(`HTML Intellisense schema generated at ${e}`)};module.exports={generateHTMLIntellisense:generateHTMLIntellisense},require.main===module&&generateHTMLIntellisense();