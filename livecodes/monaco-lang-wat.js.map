{
  "version": 3,
  "sources": ["../../src/livecodes/editor/monaco/languages/monaco-lang-wat.ts"],
  "sourcesContent": ["// 'WebAssembly Text Format' Monarch language\n// from https://github.com/AssemblyScript/website/blob/main/src/.vuepress/public/scripts/wat.js\nexport default {\n  config: {\n    brackets: [\n      ['(', ')'],\n      ['if', 'end'],\n      ['loop', 'end'],\n      ['block', 'end'],\n    ],\n    autoClosingPairs: [\n      { open: '(', close: ')' },\n      { open: 'if', close: 'end' },\n      { open: 'loop', close: 'end' },\n      { open: 'block', close: 'end' },\n    ],\n    surroundingPairs: [\n      { open: '(', close: ')' },\n      { open: 'if', close: 'end' },\n      { open: 'loop', close: 'end' },\n      { open: 'block', close: 'end' },\n    ],\n  },\n  tokens: {\n    keywords: [\n      'module',\n      'import',\n      'export',\n      'memory',\n      'data',\n      'table',\n      'elem',\n      'start',\n      'func',\n      'tag',\n      'type',\n      'param',\n      'result',\n      'global',\n      'local',\n      'mut',\n      'struct',\n      'array',\n      'field',\n    ],\n    types: [\n      'i8',\n      'i16',\n      'i32',\n      'i64',\n      'f32',\n      'f64',\n      'v128',\n      'i31ref',\n      'eqref',\n      'anyref',\n      'dataref',\n      'externref',\n      'funcref',\n      'exnref',\n      'extern',\n      'null',\n      'any',\n      'eq',\n    ],\n    instructions: [\n      'pop',\n      'nop',\n      'drop',\n      'data.drop',\n      'elem.drop',\n      'local.get',\n      'local.set',\n      'local.tee',\n      'global.get',\n      'global.set',\n      'tuple.make',\n      'tuple.extract',\n      'select',\n      'v128.const',\n      'v128.and',\n      'v128.or',\n      'v128.xor',\n      'v128.not',\n      'v128.andnot',\n      'v128.bitselect',\n      'v128.load',\n      'v128.load8x8_s',\n      'v128.load8x8_u',\n      'v128.load16x4_s',\n      'v128.load16x4_u',\n      'v128.load32x2_s',\n      'v128.load32x2_u',\n      'v128.load8_lane',\n      'v128.load16_lane',\n      'v128.load32_lane',\n      'v128.load64_lane',\n      'v128.load8_splat',\n      'v128.load16_splat',\n      'v128.load32_splat',\n      'v128.load64_splat',\n      'v128.load32_zero',\n      'v128.load64_zero',\n      'v128.store',\n      'v128.store8_lane',\n      'v128.store16_lane',\n      'v128.store32_lane',\n      'v128.store64_lane',\n      'v128.any_true',\n      'i8x16.shuffle',\n      'i8x16.swizzle',\n      'i8x16.bitmask',\n      'i8x16.splat',\n      'i8x16.popcnt',\n      'i8x16.replace_lane',\n      'i8x16.extract_lane_s',\n      'i8x16.extract_lane_u',\n      'i8x16.all_true',\n      'i8x16.abs',\n      'i8x16.add',\n      'i8x16.add_sat_s',\n      'i8x16.add_sat_u',\n      'i8x16.sub',\n      'i8x16.sub_sat_s',\n      'i8x16.sub_sat_u',\n      'i8x16.mul',\n      'i8x16.neg',\n      'i8x16.shl',\n      'i8x16.shr_s',\n      'i8x16.shr_u',\n      'i8x16.eq',\n      'i8x16.ne',\n      'i8x16.lt_s',\n      'i8x16.lt_u',\n      'i8x16.le_s',\n      'i8x16.le_u',\n      'i8x16.gt_s',\n      'i8x16.gt_u',\n      'i8x16.ge_s',\n      'i8x16.ge_u',\n      'i8x16.min_s',\n      'i8x16.min_u',\n      'i8x16.max_s',\n      'i8x16.max_u',\n      'i8x16.avgr_u',\n      'i8x16.narrow_i16x8_s',\n      'i8x16.narrow_i16x8_u',\n      'i16x8.bitmask',\n      'i16x8.splat',\n      'i16x8.load_8x8_s',\n      'i16x8.load_8x8_u',\n      'i16x8.replace_lane',\n      'i16x8.extract_lane_s',\n      'i16x8.extract_lane_u',\n      'i16x8.extend_low_i8x16_s',\n      'i16x8.extend_high_i8x16_s',\n      'i16x8.extend_low_i8x16_u',\n      'i16x8.extend_high_i8x16_u',\n      'i16x8.all_true',\n      'i16x8.abs',\n      'i16x8.add',\n      'i16x8.add_sat_s',\n      'i16x8.add_sat_u',\n      'i16x8.extadd_pairwise_i8x16_s',\n      'i16x8.extadd_pairwise_i8x16_u',\n      'i16x8.sub',\n      'i16x8.sub_sat_s',\n      'i16x8.sub_sat_u',\n      'i16x8.q15mulr_sat_s',\n      'i16x8.mul',\n      'i16x8.extmul_low_i8x16_s',\n      'i16x8.extmul_high_i8x16_s',\n      'i16x8.extmul_low_i8x16_u',\n      'i16x8.extmul_high_i8x16_u',\n      'i16x8.neg',\n      'i16x8.shl',\n      'i16x8.shr_s',\n      'i16x8.shr_u',\n      'i16x8.eq',\n      'i16x8.ne',\n      'i16x8.lt_s',\n      'i16x8.lt_u',\n      'i16x8.le_s',\n      'i16x8.le_u',\n      'i16x8.gt_s',\n      'i16x8.gt_u',\n      'i16x8.ge_s',\n      'i16x8.ge_u',\n      'i16x8.min_s',\n      'i16x8.min_u',\n      'i16x8.max_s',\n      'i16x8.max_u',\n      'i16x8.avgr_u',\n      'i16x8.narrow_i32x4_s',\n      'i16x8.narrow_i32x4_u',\n      'i32x4.bitmask',\n      'i32x4.splat',\n      'i32x4.load_16x4_s',\n      'i32x4.load_16x4_u',\n      'i32x4.replace_lane',\n      'i32x4.extract_lane',\n      'i32x4.extend_low_i16x8_s',\n      'i32x4.extend_high_i16x8_s',\n      'i32x4.extend_low_i16x8_u',\n      'i32x4.extend_high_i16x8_u',\n      'i32x4.all_true',\n      'i32x4.abs',\n      'i32x4.add',\n      'i32x4.extadd_pairwise_i16x8_s',\n      'i32x4.extadd_pairwise_i16x8_u',\n      'i32x4.sub',\n      'i32x4.mul',\n      'i32x4.extmul_low_i16x8_s',\n      'i32x4.extmul_high_i16x8_s',\n      'i32x4.extmul_low_i16x8_u',\n      'i32x4.extmul_high_i16x8_u',\n      'i32x4.neg',\n      'i32x4.shl',\n      'i32x4.shr_s',\n      'i32x4.shr_u',\n      'i32x4.eq',\n      'i32x4.ne',\n      'i32x4.lt_s',\n      'i32x4.lt_u',\n      'i32x4.le_s',\n      'i32x4.le_u',\n      'i32x4.gt_s',\n      'i32x4.gt_u',\n      'i32x4.ge_s',\n      'i32x4.ge_u',\n      'i32x4.min_s',\n      'i32x4.min_u',\n      'i32x4.max_s',\n      'i32x4.max_u',\n      'i32x4.trunc_sat_f32x4_s',\n      'i32x4.trunc_sat_f32x4_u',\n      'i32x4.trunc_sat_f64x2_s_zero',\n      'i32x4.trunc_sat_f64x2_u_zero',\n      'i32x4.dot_i16x8_s',\n      'i64x2.bitmask',\n      'i64x2.splat',\n      'i64x2.load32x2_s',\n      'i64x2.load32x2_u',\n      'i64x2.replace_lane',\n      'i64x2.extract_lane',\n      'i64x2.extend_low_i32x4_s',\n      'i64x2.extend_high_i32x4_s',\n      'i64x2.extend_low_i32x4_u',\n      'i64x2.extend_high_i32x4_u',\n      'i64x2.all_true',\n      'i64x2.abs',\n      'i64x2.add',\n      'i64x2.sub',\n      'i64x2.mul',\n      'i64x2.neg',\n      'i64x2.shl',\n      'i64x2.shr_s',\n      'i64x2.shr_u',\n      'f32x4.splat',\n      'f32x4.replace_lane',\n      'f32x4.extract_lane',\n      'f32x4.add',\n      'f32x4.sub',\n      'f32x4.mul',\n      'i64x2.extmul_low_i32x4_s',\n      'i64x2.extmul_high_i32x4_s',\n      'i64x2.extmul_low_i32x4_u',\n      'i64x2.extmul_high_i32x4_u',\n      'i64x2.eq',\n      'i64x2.ne',\n      'i64x2.lt_s',\n      'i64x2.le_s',\n      'i64x2.gt_s',\n      'i64x2.ge_s',\n      'f32x4.neg',\n      'f32x4.eq',\n      'f32x4.ne',\n      'f32x4.lt',\n      'f32x4.le',\n      'f32x4.gt',\n      'f32x4.ge',\n      'f32x4.abs',\n      'f32x4.min',\n      'f32x4.pmin',\n      'f32x4.max',\n      'f32x4.pmax',\n      'f32x4.div',\n      'f32x4.sqrt',\n      'f32x4.ceil',\n      'f32x4.floor',\n      'f32x4.trunc',\n      'f32x4.nearest',\n      'f32x4.demote_f64x2_zero',\n      'f32x4.convert_i32x4_s',\n      'f32x4.convert_i32x4_u',\n      'f64x2.splat',\n      'f64x2.replace_lane',\n      'f64x2.extract_lane',\n      'f64x2.add',\n      'f64x2.sub',\n      'f64x2.mul',\n      'f64x2.neg',\n      'f64x2.eq',\n      'f64x2.ne',\n      'f64x2.lt',\n      'f64x2.le',\n      'f64x2.gt',\n      'f64x2.ge',\n      'f64x2.abs',\n      'f64x2.min',\n      'f64x2.max',\n      'f64x2.pmin',\n      'f64x2.pmax',\n      'f64x2.div',\n      'f64x2.sqrt',\n      'f64x2.ceil',\n      'f64x2.floor',\n      'f64x2.trunc',\n      'f64x2.nearest',\n      'f64x2.promote_low_f32x4',\n      'f64x2.convert_low_i32x4_s',\n      'f64x2.convert_low_i32x4_u',\n      'i32.atomic.load',\n      'i32.atomic.load8_u',\n      'i32.atomic.load16_u',\n      'i32.atomic.store',\n      'i32.atomic.store8',\n      'i32.atomic.store16',\n      'i32.atomic.rmw.add',\n      'i32.atomic.rmw.sub',\n      'i32.atomic.rmw.and',\n      'i32.atomic.rmw.or',\n      'i32.atomic.rmw.xor',\n      'i32.atomic.rmw.xchg',\n      'i32.atomic.rmw.cmpxchg',\n      'i32.atomic.rmw8.add_u',\n      'i32.atomic.rmw8.sub_u',\n      'i32.atomic.rmw8.and_u',\n      'i32.atomic.rmw8.or_u',\n      'i32.atomic.rmw8.xor_u',\n      'i32.atomic.rmw8.xchg_u',\n      'i32.atomic.rmw8.cmpxchg_u',\n      'i32.atomic.rmw16.add_u',\n      'i32.atomic.rmw16.sub_u',\n      'i32.atomic.rmw16.and_u',\n      'i32.atomic.rmw16.or_u',\n      'i32.atomic.rmw16.xor_u',\n      'i32.atomic.rmw16.xchg_u',\n      'i32.atomic.rmw16.cmpxchg_u',\n      'i64.atomic.load',\n      'i64.atomic.load8_u',\n      'i64.atomic.load16_u',\n      'i64.atomic.load32_u',\n      'i64.atomic.store',\n      'i64.atomic.store8',\n      'i64.atomic.store16',\n      'i64.atomic.store32',\n      'i64.atomic.rmw.add',\n      'i64.atomic.rmw.sub',\n      'i64.atomic.rmw.and',\n      'i64.atomic.rmw.or',\n      'i64.atomic.rmw.xor',\n      'i64.atomic.rmw.xchg',\n      'i64.atomic.rmw.cmpxchg',\n      'i64.atomic.rmw8.add_u',\n      'i64.atomic.rmw8.sub_u',\n      'i64.atomic.rmw8.and_u',\n      'i64.atomic.rmw8.or_u',\n      'i64.atomic.rmw8.xor_u',\n      'i64.atomic.rmw8.xchg_u',\n      'i64.atomic.rmw8.cmpxchg_u',\n      'i64.atomic.rmw16.add_u',\n      'i64.atomic.rmw16.sub_u',\n      'i64.atomic.rmw16.and_u',\n      'i64.atomic.rmw16.or_u',\n      'i64.atomic.rmw16.xor_u',\n      'i64.atomic.rmw16.xchg_u',\n      'i64.atomic.rmw16.cmpxchg_u',\n      'i64.atomic.rmw32.add_u',\n      'i64.atomic.rmw32.sub_u',\n      'i64.atomic.rmw32.and_u',\n      'i64.atomic.rmw32.or_u',\n      'i64.atomic.rmw32.xor_u',\n      'i64.atomic.rmw32.xchg_u',\n      'i64.atomic.rmw32.cmpxchg_u',\n      'atomic.fence',\n      'func.bind',\n      'ref',\n      'ref.eq',\n      'ref.null',\n      'ref.is_null',\n      'ref.is_func',\n      'ref.is_data',\n      'ref.is_i31',\n      'ref.as_func',\n      'ref.as_non_null',\n      'ref.as_data',\n      'ref.as_i31',\n      'ref.func',\n      'ref.cast',\n      'ref.cast_static',\n      'ref.test',\n      'ref.test_static',\n      'table.get',\n      'table.set',\n      'table.size',\n      'table.grow',\n      'table.fill',\n      'table.init',\n      'table.copy',\n      'throw',\n      'rethrow',\n      'i32.load',\n      'i32.load8_s',\n      'i32.load8_u',\n      'i32.load16_s',\n      'i32.load16_u',\n      'i32.store',\n      'i32.store8',\n      'i32.store16',\n      'i32.const',\n      'i32.eqz',\n      'i32.eq',\n      'i32.ne',\n      'i32.lt_s',\n      'i32.lt_u',\n      'i32.le_s',\n      'i32.le_u',\n      'i32.gt_s',\n      'i32.gt_u',\n      'i32.ge_s',\n      'i32.ge_u',\n      'i32.clz',\n      'i32.ctz',\n      'i32.popcnt',\n      'i32.add',\n      'i32.sub',\n      'i32.mul',\n      'i32.div_s',\n      'i32.div_u',\n      'i32.rem_s',\n      'i32.rem_u',\n      'i32.and',\n      'i32.or',\n      'i32.xor',\n      'i32.shl',\n      'i32.shr_s',\n      'i32.shr_u',\n      'i32.rotl',\n      'i32.rotr',\n      'i32.wrap_i64',\n      'i32.trunc_f32_s',\n      'i32.trunc_f32_u',\n      'i32.trunc_f64_s',\n      'i32.trunc_f64_u',\n      'i32.reinterpret_f32',\n      'i64.load',\n      'i64.load8_s',\n      'i64.load8_u',\n      'i64.load16_s',\n      'i64.load16_u',\n      'i64.load32_s',\n      'i64.load32_u',\n      'i64.store',\n      'i64.store8',\n      'i64.store16',\n      'i64.store32',\n      'i64.const',\n      'i64.eqz',\n      'i64.eq',\n      'i64.ne',\n      'i64.lt_s',\n      'i64.lt_u',\n      'i64.le_s',\n      'i64.le_u',\n      'i64.gt_s',\n      'i64.gt_u',\n      'i64.ge_s',\n      'i64.ge_u',\n      'i64.clz',\n      'i64.ctz',\n      'i64.popcnt',\n      'i64.add',\n      'i64.sub',\n      'i64.mul',\n      'i64.div_s',\n      'i64.div_u',\n      'i64.rem_s',\n      'i64.rem_u',\n      'i64.and',\n      'i64.or',\n      'i64.xor',\n      'i64.shl',\n      'i64.shr_s',\n      'i64.shr_u',\n      'i64.rotl',\n      'i64.rotr',\n      'i64.extend_i32_s',\n      'i64.extend_i32_u',\n      'i64.trunc_f32_s',\n      'i64.trunc_f32_u',\n      'i64.trunc_f64_s',\n      'i64.trunc_f64_u',\n      'i64.reinterpret_f64',\n      'f32.load',\n      'f32.store',\n      'f32.const',\n      'f32.eq',\n      'f32.ne',\n      'f32.lt',\n      'f32.le',\n      'f32.gt',\n      'f32.ge',\n      'f32.abs',\n      'f32.neg',\n      'f32.ceil',\n      'f32.floor',\n      'f32.trunc',\n      'f32.nearest',\n      'f32.sqrt',\n      'f32.add',\n      'f32.sub',\n      'f32.mul',\n      'f32.div',\n      'f32.min',\n      'f32.max',\n      'f32.copysign',\n      'f32.convert_i32_s',\n      'f32.convert_i32_u',\n      'f32.convert_i64_s',\n      'f32.convert_i64_u',\n      'f32.demote_f64',\n      'f32.reinterpret_i32',\n      'f64.load',\n      'f64.store',\n      'f64.const',\n      'f64.eq',\n      'f64.ne',\n      'f64.lt',\n      'f64.le',\n      'f64.gt',\n      'f64.ge',\n      'f64.abs',\n      'f64.neg',\n      'f64.ceil',\n      'f64.floor',\n      'f64.trunc',\n      'f64.nearest',\n      'f64.sqrt',\n      'f64.add',\n      'f64.sub',\n      'f64.mul',\n      'f64.div',\n      'f64.min',\n      'f64.max',\n      'f64.copysign',\n      'f64.convert_i32_s',\n      'f64.convert_i32_u',\n      'f64.convert_i64_s',\n      'f64.convert_i64_u',\n      'f64.promote_f32',\n      'f64.reinterpret_i64',\n      'i32.extend8_s',\n      'i32.extend16_s',\n      'i64.extend8_s',\n      'i64.extend16_s',\n      'i64.extend32_s',\n      'i32.trunc_sat_f32_s',\n      'i32.trunc_sat_f32_u',\n      'i32.trunc_sat_f64_s',\n      'i32.trunc_sat_f64_u',\n      'i64.trunc_sat_f32_s',\n      'i64.trunc_sat_f32_u',\n      'i64.trunc_sat_f64_s',\n      'i64.trunc_sat_f64_u',\n      'memory.size',\n      'memory.grow',\n      'memory.copy',\n      'memory.fill',\n      'memory.init',\n      'memory.atomic.notify',\n      'memory.atomic.wait32',\n      'memory.atomic.wait64',\n      'i31.new',\n      'i31.get_u',\n      'i31.get_s',\n      'array.new',\n      'array.new_default',\n      'array.init',\n      'array.init_static',\n      'array.get',\n      'array.get_s',\n      'array.get_u',\n      'array.set',\n      'array.len',\n      'array.copy',\n      'struct.new',\n      'struct.new_default',\n      'struct.new_with_rtt',\n      'struct.new_default_with_rtt',\n      'struct.get',\n      'struct.get_s',\n      'struct.get_u',\n      'struct.set',\n      'rtt.canon',\n      'rtt.sub',\n      'rtt.fresh_sub',\n    ],\n    controlInstructions: [\n      'block',\n      'loop',\n      'if',\n      'else',\n      'then',\n      'end',\n      'do',\n      'let',\n      'br',\n      'br_if',\n      'br_table',\n      'br_on_exn',\n      'br_on_null',\n      'br_on_non_null',\n      'br_on_cast',\n      'br_on_cast_static',\n      'br_on_cast_fail',\n      'br_on_cast_static_fail',\n      'br_on_func',\n      'br_on_non_func',\n      'br_on_data',\n      'br_on_non_data',\n      'br_on_i31',\n      'br_on_non_i31',\n      'call',\n      'call_indirect',\n      'call_ref',\n      'return',\n      'return_call',\n      'return_call_indirect',\n      'return_call_ref',\n      'try',\n      'catch',\n      'catch_all',\n      'delegate',\n      'unreachable',\n    ],\n\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    digits: /\\d+(_+\\d+)*/,\n    octaldigits: /[0-7]+(_+[0-7]+)*/,\n    binarydigits: /[0-1]+(_+[0-1]+)*/,\n    hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\n\n    tokenizer: {\n      root: [\n        // whitespace\n        { include: '@whitespace' },\n\n        // strings\n        [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'], // non-terminated string\n        [/\"/, 'string', '@string'],\n\n        // numbers (not all of these are generated, but here to be sure)\n        [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\n        [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\n        [/0[xX](@hexdigits)[Ll]?/, 'number.hex'],\n        [/0(@octaldigits)[Ll]?/, 'number.octal'],\n        [/0[bB](@binarydigits)[Ll]?/, 'number.binary'],\n        [/(@digits)[fFdD]/, 'number.float'],\n        [/(@digits)[lL]?/, 'number'],\n\n        // variable names\n        [/\\$[^\\s\\)]*/, { token: 'identifier' }],\n\n        // instructions and types\n        [\n          /[a-z0-9_]+(?:\\.[a-z0-9_]+)*/,\n          {\n            cases: {\n              '@types': { token: 'type.$0' },\n              '@keywords': { token: 'keyword.$0' },\n              '@controlInstructions': { token: 'controlInstruction.$0' },\n              '@instructions': { token: 'instruction.$0' },\n              '@default': 'identifier',\n            },\n          },\n        ],\n      ],\n\n      // eslint-disable-next-line id-blacklist\n      string: [\n        [/[^\\\\\"]+/, 'string'],\n        [/@escapes/, 'string.escape'],\n        [/\\\\./, 'string.escape.invalid'],\n        [/\"/, 'string', '@pop'],\n      ],\n\n      whitespace: [\n        [/[ \\t\\r\\n]+/, ''],\n        [/(;; )(ERROR |FAILURE )([^\\n]*)/, ['comment', 'error', '']],\n        [/(;; )(WARNING )([^\\n]*)/, ['comment', 'warning', '']],\n        [/(;; )(INFO )([^\\n]*)/, ['comment', 'info', '']],\n        [/(;; )(PEDANTIC )([^\\n]*)/, ['comment', 'pedantic', '']],\n        [/(;;  +)(~+|\\^)$/, ['comment', 'underline']],\n        [/(;;  )([^\\n]*)/, ['comment', '']],\n        [/;;[^\\n]*/, 'comment'],\n      ],\n    },\n  },\n};\n"],
  "mappings": "AAEA,IAAOA,EAAQ,CACb,OAAQ,CACN,SAAU,CACR,CAAC,IAAK,GAAG,EACT,CAAC,KAAM,KAAK,EACZ,CAAC,OAAQ,KAAK,EACd,CAAC,QAAS,KAAK,CACjB,EACA,iBAAkB,CAChB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,KAAM,MAAO,KAAM,EAC3B,CAAE,KAAM,OAAQ,MAAO,KAAM,EAC7B,CAAE,KAAM,QAAS,MAAO,KAAM,CAChC,EACA,iBAAkB,CAChB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,KAAM,MAAO,KAAM,EAC3B,CAAE,KAAM,OAAQ,MAAO,KAAM,EAC7B,CAAE,KAAM,QAAS,MAAO,KAAM,CAChC,CACF,EACA,OAAQ,CACN,SAAU,CACR,SACA,SACA,SACA,SACA,OACA,QACA,OACA,QACA,OACA,MACA,OACA,QACA,SACA,SACA,QACA,MACA,SACA,QACA,OACF,EACA,MAAO,CACL,KACA,MACA,MACA,MACA,MACA,MACA,OACA,SACA,QACA,SACA,UACA,YACA,UACA,SACA,SACA,OACA,MACA,IACF,EACA,aAAc,CACZ,MACA,MACA,OACA,YACA,YACA,YACA,YACA,YACA,aACA,aACA,aACA,gBACA,SACA,aACA,WACA,UACA,WACA,WACA,cACA,iBACA,YACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,mBACA,mBACA,aACA,mBACA,oBACA,oBACA,oBACA,gBACA,gBACA,gBACA,gBACA,cACA,eACA,qBACA,uBACA,uBACA,iBACA,YACA,YACA,kBACA,kBACA,YACA,kBACA,kBACA,YACA,YACA,YACA,cACA,cACA,WACA,WACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,cACA,cACA,cACA,cACA,eACA,uBACA,uBACA,gBACA,cACA,mBACA,mBACA,qBACA,uBACA,uBACA,2BACA,4BACA,2BACA,4BACA,iBACA,YACA,YACA,kBACA,kBACA,gCACA,gCACA,YACA,kBACA,kBACA,sBACA,YACA,2BACA,4BACA,2BACA,4BACA,YACA,YACA,cACA,cACA,WACA,WACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,cACA,cACA,cACA,cACA,eACA,uBACA,uBACA,gBACA,cACA,oBACA,oBACA,qBACA,qBACA,2BACA,4BACA,2BACA,4BACA,iBACA,YACA,YACA,gCACA,gCACA,YACA,YACA,2BACA,4BACA,2BACA,4BACA,YACA,YACA,cACA,cACA,WACA,WACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,cACA,cACA,cACA,cACA,0BACA,0BACA,+BACA,+BACA,oBACA,gBACA,cACA,mBACA,mBACA,qBACA,qBACA,2BACA,4BACA,2BACA,4BACA,iBACA,YACA,YACA,YACA,YACA,YACA,YACA,cACA,cACA,cACA,qBACA,qBACA,YACA,YACA,YACA,2BACA,4BACA,2BACA,4BACA,WACA,WACA,aACA,aACA,aACA,aACA,YACA,WACA,WACA,WACA,WACA,WACA,WACA,YACA,YACA,aACA,YACA,aACA,YACA,aACA,aACA,cACA,cACA,gBACA,0BACA,wBACA,wBACA,cACA,qBACA,qBACA,YACA,YACA,YACA,YACA,WACA,WACA,WACA,WACA,WACA,WACA,YACA,YACA,YACA,aACA,aACA,YACA,aACA,aACA,cACA,cACA,gBACA,0BACA,4BACA,4BACA,kBACA,qBACA,sBACA,mBACA,oBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,sBACA,yBACA,wBACA,wBACA,wBACA,uBACA,wBACA,yBACA,4BACA,yBACA,yBACA,yBACA,wBACA,yBACA,0BACA,6BACA,kBACA,qBACA,sBACA,sBACA,mBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,sBACA,yBACA,wBACA,wBACA,wBACA,uBACA,wBACA,yBACA,4BACA,yBACA,yBACA,yBACA,wBACA,yBACA,0BACA,6BACA,yBACA,yBACA,yBACA,wBACA,yBACA,0BACA,6BACA,eACA,YACA,MACA,SACA,WACA,cACA,cACA,cACA,aACA,cACA,kBACA,cACA,aACA,WACA,WACA,kBACA,WACA,kBACA,YACA,YACA,aACA,aACA,aACA,aACA,aACA,QACA,UACA,WACA,cACA,cACA,eACA,eACA,YACA,aACA,cACA,YACA,UACA,SACA,SACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,aACA,UACA,UACA,UACA,YACA,YACA,YACA,YACA,UACA,SACA,UACA,UACA,YACA,YACA,WACA,WACA,eACA,kBACA,kBACA,kBACA,kBACA,sBACA,WACA,cACA,cACA,eACA,eACA,eACA,eACA,YACA,aACA,cACA,cACA,YACA,UACA,SACA,SACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,aACA,UACA,UACA,UACA,YACA,YACA,YACA,YACA,UACA,SACA,UACA,UACA,YACA,YACA,WACA,WACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,sBACA,WACA,YACA,YACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,UACA,WACA,YACA,YACA,cACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,eACA,oBACA,oBACA,oBACA,oBACA,iBACA,sBACA,WACA,YACA,YACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,UACA,WACA,YACA,YACA,cACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,eACA,oBACA,oBACA,oBACA,oBACA,kBACA,sBACA,gBACA,iBACA,gBACA,iBACA,iBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,cACA,cACA,cACA,cACA,cACA,uBACA,uBACA,uBACA,UACA,YACA,YACA,YACA,oBACA,aACA,oBACA,YACA,cACA,cACA,YACA,YACA,aACA,aACA,qBACA,sBACA,8BACA,aACA,eACA,eACA,aACA,YACA,UACA,eACF,EACA,oBAAqB,CACnB,QACA,OACA,KACA,OACA,OACA,MACA,KACA,MACA,KACA,QACA,WACA,YACA,aACA,iBACA,aACA,oBACA,kBACA,yBACA,aACA,iBACA,aACA,iBACA,YACA,gBACA,OACA,gBACA,WACA,SACA,cACA,uBACA,kBACA,MACA,QACA,YACA,WACA,aACF,EAEA,QAAS,wEACT,OAAQ,cACR,YAAa,oBACb,aAAc,oBACd,UAAW,iCAEX,UAAW,CACT,KAAM,CAEJ,CAAE,QAAS,aAAc,EAGzB,CAAC,kBAAmB,gBAAgB,EACpC,CAAC,IAAK,SAAU,SAAS,EAGzB,CAAC,yCAA0C,cAAc,EACzD,CAAC,oDAAqD,cAAc,EACpE,CAAC,yBAA0B,YAAY,EACvC,CAAC,uBAAwB,cAAc,EACvC,CAAC,4BAA6B,eAAe,EAC7C,CAAC,kBAAmB,cAAc,EAClC,CAAC,iBAAkB,QAAQ,EAG3B,CAAC,aAAc,CAAE,MAAO,YAAa,CAAC,EAGtC,CACE,8BACA,CACE,MAAO,CACL,SAAU,CAAE,MAAO,SAAU,EAC7B,YAAa,CAAE,MAAO,YAAa,EACnC,uBAAwB,CAAE,MAAO,uBAAwB,EACzD,gBAAiB,CAAE,MAAO,gBAAiB,EAC3C,WAAY,YACd,CACF,CACF,CACF,EAGA,OAAQ,CACN,CAAC,UAAW,QAAQ,EACpB,CAAC,WAAY,eAAe,EAC5B,CAAC,MAAO,uBAAuB,EAC/B,CAAC,IAAK,SAAU,MAAM,CACxB,EAEA,WAAY,CACV,CAAC,aAAc,EAAE,EACjB,CAAC,iCAAkC,CAAC,UAAW,QAAS,EAAE,CAAC,EAC3D,CAAC,0BAA2B,CAAC,UAAW,UAAW,EAAE,CAAC,EACtD,CAAC,uBAAwB,CAAC,UAAW,OAAQ,EAAE,CAAC,EAChD,CAAC,2BAA4B,CAAC,UAAW,WAAY,EAAE,CAAC,EACxD,CAAC,kBAAmB,CAAC,UAAW,WAAW,CAAC,EAC5C,CAAC,iBAAkB,CAAC,UAAW,EAAE,CAAC,EAClC,CAAC,WAAY,SAAS,CACxB,CACF,CACF,CACF",
  "names": ["monaco_lang_wat_default"]
}
