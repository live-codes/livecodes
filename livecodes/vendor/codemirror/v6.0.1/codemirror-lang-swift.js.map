{
  "version": 3,
  "sources": ["../../../../../node_modules/@codemirror/legacy-modes/mode/swift.js"],
  "sourcesContent": ["function wordSet(words) {\n  var set = {}\n  for (var i = 0; i < words.length; i++) set[words[i]] = true\n  return set\n}\n\nvar keywords = wordSet([\"_\",\"var\",\"let\",\"actor\",\"class\",\"enum\",\"extension\",\"import\",\"protocol\",\"struct\",\"func\",\"typealias\",\"associatedtype\",\n                        \"open\",\"public\",\"internal\",\"fileprivate\",\"private\",\"deinit\",\"init\",\"new\",\"override\",\"self\",\"subscript\",\"super\",\n                        \"convenience\",\"dynamic\",\"final\",\"indirect\",\"lazy\",\"required\",\"static\",\"unowned\",\"unowned(safe)\",\"unowned(unsafe)\",\"weak\",\"as\",\"is\",\n                        \"break\",\"case\",\"continue\",\"default\",\"else\",\"fallthrough\",\"for\",\"guard\",\"if\",\"in\",\"repeat\",\"switch\",\"where\",\"while\",\n                        \"defer\",\"return\",\"inout\",\"mutating\",\"nonmutating\",\"isolated\",\"nonisolated\",\"catch\",\"do\",\"rethrows\",\"throw\",\"throws\",\"async\",\"await\",\"try\",\"didSet\",\"get\",\"set\",\"willSet\",\n                        \"assignment\",\"associativity\",\"infix\",\"left\",\"none\",\"operator\",\"postfix\",\"precedence\",\"precedencegroup\",\"prefix\",\"right\",\n                        \"Any\",\"AnyObject\",\"Type\",\"dynamicType\",\"Self\",\"Protocol\",\"__COLUMN__\",\"__FILE__\",\"__FUNCTION__\",\"__LINE__\"])\nvar definingKeywords = wordSet([\"var\",\"let\",\"actor\",\"class\",\"enum\",\"extension\",\"import\",\"protocol\",\"struct\",\"func\",\"typealias\",\"associatedtype\",\"for\"])\nvar atoms = wordSet([\"true\",\"false\",\"nil\",\"self\",\"super\",\"_\"])\nvar types = wordSet([\"Array\",\"Bool\",\"Character\",\"Dictionary\",\"Double\",\"Float\",\"Int\",\"Int8\",\"Int16\",\"Int32\",\"Int64\",\"Never\",\"Optional\",\"Set\",\"String\",\n                     \"UInt8\",\"UInt16\",\"UInt32\",\"UInt64\",\"Void\"])\nvar operators = \"+-/*%=|&<>~^?!\"\nvar punc = \":;,.(){}[]\"\nvar binary = /^\\-?0b[01][01_]*/\nvar octal = /^\\-?0o[0-7][0-7_]*/\nvar hexadecimal = /^\\-?0x[\\dA-Fa-f][\\dA-Fa-f_]*(?:(?:\\.[\\dA-Fa-f][\\dA-Fa-f_]*)?[Pp]\\-?\\d[\\d_]*)?/\nvar decimal = /^\\-?\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[Ee]\\-?\\d[\\d_]*)?/\nvar identifier = /^\\$\\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\\1/\nvar property = /^\\.(?:\\$\\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\\1)/\nvar instruction = /^\\#[A-Za-z]+/\nvar attribute = /^@(?:\\$\\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\\1)/\n//var regexp = /^\\/(?!\\s)(?:\\/\\/)?(?:\\\\.|[^\\/])+\\//\n\nfunction tokenBase(stream, state, prev) {\n  if (stream.sol()) state.indented = stream.indentation()\n  if (stream.eatSpace()) return null\n\n  var ch = stream.peek()\n  if (ch == \"/\") {\n    if (stream.match(\"//\")) {\n      stream.skipToEnd()\n      return \"comment\"\n    }\n    if (stream.match(\"/*\")) {\n      state.tokenize.push(tokenComment)\n      return tokenComment(stream, state)\n    }\n  }\n  if (stream.match(instruction)) return \"builtin\"\n  if (stream.match(attribute)) return \"attribute\"\n  if (stream.match(binary)) return \"number\"\n  if (stream.match(octal)) return \"number\"\n  if (stream.match(hexadecimal)) return \"number\"\n  if (stream.match(decimal)) return \"number\"\n  if (stream.match(property)) return \"property\"\n  if (operators.indexOf(ch) > -1) {\n    stream.next()\n    return \"operator\"\n  }\n  if (punc.indexOf(ch) > -1) {\n    stream.next()\n    stream.match(\"..\")\n    return \"punctuation\"\n  }\n  var stringMatch\n  if (stringMatch = stream.match(/(\"\"\"|\"|')/)) {\n    var tokenize = tokenString.bind(null, stringMatch[0])\n    state.tokenize.push(tokenize)\n    return tokenize(stream, state)\n  }\n\n  if (stream.match(identifier)) {\n    var ident = stream.current()\n    if (types.hasOwnProperty(ident)) return \"type\"\n    if (atoms.hasOwnProperty(ident)) return \"atom\"\n    if (keywords.hasOwnProperty(ident)) {\n      if (definingKeywords.hasOwnProperty(ident))\n        state.prev = \"define\"\n      return \"keyword\"\n    }\n    if (prev == \"define\") return \"def\"\n    return \"variable\"\n  }\n\n  stream.next()\n  return null\n}\n\nfunction tokenUntilClosingParen() {\n  var depth = 0\n  return function(stream, state, prev) {\n    var inner = tokenBase(stream, state, prev)\n    if (inner == \"punctuation\") {\n      if (stream.current() == \"(\") ++depth\n      else if (stream.current() == \")\") {\n        if (depth == 0) {\n          stream.backUp(1)\n          state.tokenize.pop()\n          return state.tokenize[state.tokenize.length - 1](stream, state)\n        }\n        else --depth\n      }\n    }\n    return inner\n  }\n}\n\nfunction tokenString(openQuote, stream, state) {\n  var singleLine = openQuote.length == 1\n  var ch, escaped = false\n  while (ch = stream.peek()) {\n    if (escaped) {\n      stream.next()\n      if (ch == \"(\") {\n        state.tokenize.push(tokenUntilClosingParen())\n        return \"string\"\n      }\n      escaped = false\n    } else if (stream.match(openQuote)) {\n      state.tokenize.pop()\n      return \"string\"\n    } else {\n      stream.next()\n      escaped = ch == \"\\\\\"\n    }\n  }\n  if (singleLine) {\n    state.tokenize.pop()\n  }\n  return \"string\"\n}\n\nfunction tokenComment(stream, state) {\n  var ch\n  while (ch = stream.next()) {\n    if (ch === \"/\" && stream.eat(\"*\")) {\n      state.tokenize.push(tokenComment)\n    } else if (ch === \"*\" && stream.eat(\"/\")) {\n      state.tokenize.pop()\n      break\n    }\n  }\n  return \"comment\"\n}\n\nfunction Context(prev, align, indented) {\n  this.prev = prev\n  this.align = align\n  this.indented = indented\n}\n\nfunction pushContext(state, stream) {\n  var align = stream.match(/^\\s*($|\\/[\\/\\*]|[)}\\]])/, false) ? null : stream.column() + 1\n  state.context = new Context(state.context, align, state.indented)\n}\n\nfunction popContext(state) {\n  if (state.context) {\n    state.indented = state.context.indented\n    state.context = state.context.prev\n  }\n}\n\nexport const swift = {\n  name: \"swift\",\n  startState: function() {\n    return {\n      prev: null,\n      context: null,\n      indented: 0,\n      tokenize: []\n    }\n  },\n\n  token: function(stream, state) {\n    var prev = state.prev\n    state.prev = null\n    var tokenize = state.tokenize[state.tokenize.length - 1] || tokenBase\n    var style = tokenize(stream, state, prev)\n    if (!style || style == \"comment\") state.prev = prev\n    else if (!state.prev) state.prev = style\n\n    if (style == \"punctuation\") {\n      var bracket = /[\\(\\[\\{]|([\\]\\)\\}])/.exec(stream.current())\n      if (bracket) (bracket[1] ? popContext : pushContext)(state, stream)\n    }\n\n    return style\n  },\n\n  indent: function(state, textAfter, iCx) {\n    var cx = state.context\n    if (!cx) return 0\n    var closing = /^[\\]\\}\\)]/.test(textAfter)\n    if (cx.align != null) return cx.align - (closing ? 1 : 0)\n    return cx.indented + (closing ? 0 : iCx.unit)\n  },\n\n  languageData: {\n    indentOnInput: /^\\s*[\\)\\}\\]]$/,\n    commentTokens: {line: \"//\", block: {open: \"/*\", close: \"*/\"}},\n    closeBrackets: {brackets: [\"(\", \"[\", \"{\", \"'\", '\"', \"`\"]}\n  }\n}\n"],
  "mappings": "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",
  "names": ["wordSet", "words", "set", "i", "keywords", "definingKeywords", "atoms", "types", "operators", "punc", "binary", "octal", "hexadecimal", "decimal", "identifier", "property", "instruction", "attribute", "tokenBase", "stream", "state", "prev", "ch", "tokenComment", "stringMatch", "tokenize", "tokenString", "ident", "tokenUntilClosingParen", "depth", "inner", "openQuote", "singleLine", "escaped", "Context", "align", "indented", "pushContext", "popContext", "swift", "style", "bracket", "textAfter", "iCx", "cx", "closing"]
}
