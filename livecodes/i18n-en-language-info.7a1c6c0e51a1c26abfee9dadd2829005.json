{
  "artTemplate": {
    "desc": "High performance JavaScript templating engine.",
    "link": "<1> <2>art-template official website</2> </1> <3> <4>art-template documentation</4> </3>",
    "name": "art-template"
  },
  "asciidoc": {
    "desc": "AsciiDoc compiled to HTML using Asciidoctor.",
    "link": "<1> <2>AsciiDoc official website</2> </1> <3> <4>Asciidoctor official website</4> </3> <5> <6>Asciidoctor documentation</6> </5> <7> <8>Learn X in Y minutes, where X=asciidoc</8> </7>",
    "name": "AsciiDoc"
  },
  "assemblyscript": {
    "desc": "A TypeScript-like language for WebAssembly.",
    "link": "<1> <2>AssemblyScript official website</2> </1> <3> <4>AssemblyScript documentation</4> </3> <5> <6>Load starter template</6> </5>",
    "name": "AssemblyScript"
  },
  "astro": {
    "desc": "Build faster websites with less client-side Javascript. (Still in Beta)",
    "link": "<1> <2>Astro official website</2> </1> <3> <4>Astro documentation</4> </3> <5> <6>Load starter template</6> </5>",
    "name": "Astro"
  },
  "babel": {
    "desc": "The JavaScript compiler",
    "link": "<1><2>Official website</2></1> <3> <4>Babel documentation</4> </3>",
    "name": "Babel"
  },
  "bbcode": {
    "desc": "BBCode (\"Bulletin Board Code\") is a lightweight markup language used to format messages in many Internet forum software.",
    "link": "<1><2>bbcode.org</2></1> <3> <4>BBCode guide</4> </3> <5> <6>BBCode on Wikipedia</6> </5>",
    "name": "BBCode"
  },
  "blockly": {
    "desc": "A JavaScript library for building visual programming editors.",
    "link": "<1> <2>Official website</2> </1> <3> <4>Guides</4> </3> <5> <6>Reference</6> </5> <7> <8>Samples</8> </7> <9> <10>Load starter template</10> </9>",
    "name": "Blockly"
  },
  "civet": {
    "desc": "Civet is a programming language that compiles to TypeScript or JavaScript, so you can use existing tooling but enable concise and powerful syntax.",
    "link": "<1> <2>Civet official website</2> </1> <3> <4>Civet cheatsheet</4> </3> <5> <6>Load starter template</6> </5>",
    "name": "Civet"
  },
  "clio": {
    "desc": "Clio is a fast, distributed, functional programming language that compiles to JavaScript.",
    "link": "<1> <2>Clio official website</2> </1> <3> <4>Clio documentation</4> </3> <5> <6>Load starter template</6> </5>",
    "name": "Clio"
  },
  "clojurescript": {
    "desc": "ClojureScript is a compiler for <1>Clojure</1> that targets JavaScript. <2></2>In LiveCodes, it runs in the browser using <3>Cherry</3>",
    "link": "<1> <2>ClojureScript official website</2> </1> <3> <4>Clojure official website</4> </3> <5> <6>Cherry repo</6> </5> <7> <8>Learn X in Y minutes, where X=clojure</8> </7> <9> <10>LiveCodes Documentations</10> </9> <11> <12>Load starter template</12> </11>",
    "name": "ClojureScript (CLJS)"
  },
  "coffeescript": {
    "desc": "Unfancy JavaScript.",
    "link": "<1> <2>CoffeeScript official website</2> </1> <3> <4>Learn X in Y minutes, where X=coffeescript</4> </3> <5> <6>Load starter template</6> </5>",
    "name": "CoffeeScript"
  },
  "commonlisp": {
    "desc": "A Common Lisp implementation on Javascript using JSCL (a Lisp-to-Javascript compiler bootstrapped from Common Lisp).",
    "link": "<1> <2>Common-Lisp.net</2> </1> <3> <4>JSCL Project</4> </3> <5> <6>Common Lisp Resources</6> </5> <7> <8>Learn X in Y minutes, where X=Common Lisp</8> </7> <9> <10>Load starter template</10> </9>",
    "name": "Common Lisp"
  },
  "cpp": {
    "desc1": "C++ support using JSCPP (a simple C++ interpreter written in JavaScript).",
    "desc2": "It is not a complete implementation of C++. Please refer to <1>JSCPP documentation</1> for details.",
    "link": "<1> <2>Standard C++ Foundation</2> </1> <3> <4>JSCPP</4> </3> <5> <6>Learn X in Y minutes, where X=C++</6> </5> <7> <8>Load starter template</8> </7>",
    "name": "C++"
  },
  "cppWasm": {
    "desc": "Clang C/C++ compiler running on WebAssembly, using <1>wasm-clang</1> adapted by <2>polylang.io</2>",
    "link": "<1> <2>Standard C++ Foundation</2> </1> <3> <4>Clang official website</4> </3> <5> <6>Learn X in Y minutes, where X=C++</6> </5> <7> <8>Load starter template</8> </7>",
    "name": "C/C++ (Wasm)"
  },
  "diagrams": {
    "desc1": "(Experimental)",
    "desc2": "Diagrams-as-code. Supports:",
    "desc3": "<1> <2>Cytoscape</2> </1> <3> <4>ELK</4> (using <5>elkjs</5>) </3> <6> <7>Gnuplot</7> (using <8>gnuplot-JS</8>) </6> <9> <10>Graphviz</10> (using <11>@hpcc-js/wasm</11>) </9> <12> <13>Mermaid</13> </12> <14> <15>Nomnoml</15> </14> <16> <17>Pintora</17> </16> <18> <19>Plotly</19> </18> <20> <21>Svgbob</21> </20> <22> <23>Vega</23> </22> <24> <25>VegaLite</25> </24> <26> <27>WaveDrom</27> </26>",
    "link": "<1> <2>Load starter template</2> </1> <3> <4>LiveCodes Documentation</4> </3>",
    "name": "Diagrams"
  },
  "dot": {
    "desc": "The fastest + concise javascript template engine for Node.js and browsers.",
    "link": "<1> <2>Official website</2> </1> <3> <4>LiveCodes Documentations</4> </3>",
    "name": "doT.js"
  },
  "ejs": {
    "desc": "Embedded JavaScript templating.",
    "link": "<1><2>Official website</2></1> <3> <4>LiveCodes Documentations</4> </3>",
    "name": "EJS"
  },
  "eta": {
    "desc": "Embedded JS template engine for Node, Deno, and the browser. Lighweight, fast, and pluggable. Written in TypeScript.",
    "link": "<1><2>Official website</2></1> <3> <4>Documentation</4> </3> <5> <6>LiveCodes Documentations</6> </5>",
    "name": "Eta"
  },
  "fennel": {
    "desc": "Fennel is a programming language that brings together the speed, simplicity, and reach of Lua with the flexibility of a lisp syntax and macro system.",
    "link": "<1> <2>Fennel official website</2> </1> <3> <4>Getting Started with Fennel</4> </3> <5> <6>LiveCodes Documentations</6> </5> <7> <8>Load starter template</8> </7>",
    "name": "Fennel"
  },
  "flow": {
    "desc": "Flow is a static type checker for JavaScript.",
    "link": "<1> <2>Flow official website</2> </1> <3> <4>Flow documentation</4> </3>",
    "name": "Flow"
  },
  "gleam": {
    "desc1": "Gleam is a friendly language for building type-safe systems that scale!",
    "desc2": "Gleam is a statically-typed functional programming language, which compiles to Erlang or JavaScript.",
    "link": "<1><2>Gleam website</2></1> <3> <4>Gleam documentation</4> </3> <5> <6>Gleam language tour</6> </5> <7> <8>Load starter template</8> </7>",
    "name": "Gleam"
  },
  "go": {
    "desc1": "Go (Golang) is an open source programming language that makes it easy to build simple, reliable, and efficient software.",
    "desc2": "Here, it is compiled to JavaScript using GopherJS.",
    "link": "<1><2>Go website</2></1> <3><4>Go documentation</4></3> <5> <6>GopherJS repo</6> </5> <7> <8>Learn X in Y minutes, where X=Go</8> </7> <9> <10>Load starter template</10> </9>",
    "name": "Go"
  },
  "haml": {
    "desc": "Haml compiler for client side javascript view templates using clientside-haml-js.",
    "link": "<1><2>Haml official website</2></1> <3> <4>Haml documentation</4> </3> <5> <6>clientside-haml-js GitHub repo</6> </5> <7> <8>Learn X in Y minutes, where X=haml</8> </7> <9> <10>LiveCodes Documentations</10> </9>",
    "name": "Haml"
  },
  "handlebars": {
    "desc": "Minimal templating on steroids.",
    "link": "<1><2>Official website</2></1> <3> <4>LiveCodes Documentations</4> </3>",
    "name": "Handlebars"
  },
  "imba": {
    "desc": "The friendly full-stack language.",
    "link": "<1><2>Official website</2></1>",
    "name": "Imba"
  },
  "jsx": {
    "desc": "JSX is compiled to JavaScript in LiveCodes using the TypeScript Compiler.  By default it uses React as the JSX runtime.",
    "link": "<1> <2>React official website</2> </1> <3> <4>JSX in React documentation</4> </3> <5> <6>LiveCodes Documentations</6> </5> <7> <8>Load starter template</8> </7>",
    "name": "JSX"
  },
  "julia": {
    "desc1": "Julia language support in LiveCodes is still experimental",
    "desc2": "Julia compiler and Julia Base running on WASM, using <1>julia-wasm</1> adapted by <2>polylang.io</2>",
    "link": "<1> <2>Julia official website</2> </1> <3> <4>Julia documentation</4> </3> <5> <6>Learn X in Y minutes, where X=Julia</6> </5> <7> <8>Load starter template</8> </7>",
    "name": "Julia"
  },
  "less": {
    "desc": "It's CSS, with just a little more.",
    "link": "<1><2>Less official website</2></1> <3> <4>Learn X in Y minutes, where X=less</4> </3>",
    "name": "Less"
  },
  "liquid": {
    "desc": "A simple, expressive and safe template engine.",
    "link": "<1> <2>LiquidJS official website</2> </1> <3> <4>LiquidJS documentation</4> </3> <5> <6>LiveCodes Documentations</6> </5>",
    "name": "LiquidJS"
  },
  "livescript": {
    "desc": "A language which compiles to JavaScript.",
    "link": "<1> <2>LiveScript official website</2> </1> <3> <4>Learn X in Y minutes, where X=LiveScript</4> </3> <5> <6>Load starter template</6> </5>",
    "name": "LiveScript"
  },
  "lua": {
    "desc": "Lua running in the browser using fengari-web.",
    "link": "<1><2>Lua official website</2></1> <3> <4>Lua documentation</4> </3> <5> <6>Fengari official website</6> </5> <7> <8>fengari-web GitHub repo</8> </7> <9> <10>Learn X in Y minutes, where X=Lua</10> </9> <11> <12>LiveCodes Documentations</12> </11> <13> <14>Load starter template</14> </13>",
    "name": "Lua"
  },
  "luaWasm": {
    "desc": "Lua running in the browser using Wasmoon, a real lua 5.4 VM with JS bindings made with WebAssembly.",
    "link": "<1><2>Lua official website</2></1> <3> <4>Lua documentation</4> </3> <5> <6>Wasmoon GitHub repo</6> </5> <7> <8>Learn X in Y minutes, where X=Lua</8> </7> <9> <10>LiveCodes Documentations</10> </9> <11> <12>Load starter template</12> </11>",
    "name": "Lua (Wasm)"
  },
  "malina": {
    "desc": "Frontend compiler, inspired by Svelte.",
    "link": "<1> <2>Malina.js repo</2> </1> <3> <4>Malina.js documentation</4> </3> <5> <6>Load starter template</6> </5>",
    "name": "Malina.js"
  },
  "markdown": {
    "desc": "Markdown compiled to HTML using Marked.",
    "link": "<1> <2>Markdown official website</2> </1> <3> <4>Marked documentation</4> </3> <5> <6>Learn X in Y minutes, where X=markdown</6> </5> <7> <8>Load starter template</8> </7>",
    "name": "Markdown"
  },
  "mdx": {
    "desc": "Markdown for the component era. <1></1>MDX lets you seamlessly write JSX in your Markdown documents.",
    "link": "<1><2>MDX documentation</2></1> <3> <4>Load starter template</4> </3>",
    "name": "MDX"
  },
  "mjml": {
    "desc": "MJML is a markup language designed to reduce the pain of coding a responsive email.",
    "link": "<1><2>MJML official website</2></1> <3> <4>MJML documentation</4> </3> <5> <6>MJML official templates</6> </5> <7> <8>LiveCodes Documentations</8> </7>",
    "name": "MJML"
  },
  "mustache": {
    "desc": "Logic-less templates.",
    "link": "<1> <2>Official website</2> </1> <3> <4>mustache(5) manual</4> </3> <5> <6>JavaScript implementation</6> </5> <7> <8>LiveCodes Documentations</8> </7>",
    "name": "Mustache"
  },
  "nunjucks": {
    "desc": "A rich and powerful templating language for JavaScript. Nunjucks is essentially a port of <1>jinja2</1>",
    "link": "<1> <2>Official website</2> </1> <3> <4>LiveCodes Documentations</4> </3>",
    "name": "Nunjucks"
  },
  "ocaml": {
    "desc1": "OCaml is an industrial-strength programming language supporting functional, imperative and object-oriented styles.",
    "desc2": "ReScript compiler is used here to compile OCaml to JavaScript.",
    "link": "<1><2>OCaml website</2></1> <3> <4>OCaml documentation</4> </3> <5> <6>ReScript website</6> </5> <7> <8>Learn X in Y minutes, where X=OCaml</8> </7> <9> <10>Load starter template</10> </9>",
    "name": "OCaml"
  },
  "perl": {
    "desc": "Perl running in the browser using Perlito.",
    "link": "<1> <2>Perl official website</2> </1> <3> <4>Perl documentation</4> </3> <5> <6>Perlito5 Readme</6> </5> <7> <8>Learn X in Y minutes, where X=perl</8> </7> <9> <10>Load starter template</10> </9>",
    "name": "Perl"
  },
  "php": {
    "desc": "PHP running in the browser using Uniter.",
    "link": "<1><2>PHP official website</2></1> <3> <4>PHP documentation</4> </3> <5> <6>Uniter GitHub repo</6> </5> <7> <8>Learn X in Y minutes, where X=PHP</8> </7> <9> <10>LiveCodes Documentations</10> </9> <11> <12>Load starter template</12> </11>",
    "name": "PHP"
  },
  "phpWasm": {
    "desc": "PHP in Browser, powered by WebAssembly, using php-wasm.",
    "link": "<1><2>PHP official website</2></1> <3> <4>PHP documentation</4> </3> <5> <6>php-wasm GitHub repo</6> </5> <7> <8>Learn X in Y minutes, where X=PHP</8> </7> <9> <10>LiveCodes Documentations</10> </9> <11> <12>Load starter template</12> </11>",
    "name": "PHP (Wasm)"
  },
  "postgresql": {
    "desc": "PostgreSQL packaged as WASM using PGlite",
    "link": "<1> <2>PostgreSQL official website</2> </1> <3> <4>PostgreSQL documentation</4> </3> <5> <6>PGlite GitHub repo</6> </5> <7> <8>Learn X in Y minutes, where X=SQL</8> </7> <9> <10>Load starter template</10> </9>",
    "name": "PostgreSQL"
  },
  "prolog": {
    "desc": "An open source Prolog interpreter in JavaScript.",
    "link": "<1> <2>Tau Prolog official website</2> </1> <3> <4>Tau Prolog documentation</4> </3> <5> <6>SWI-Prolog</6> </5> <7> <8>Learn X in Y minutes, where X=Prolog</8> </7> <9> <10>Load starter template</10> </9>",
    "name": "Tau Prolog"
  },
  "pug": {
    "desc": "Robust, elegant, feature rich template engine.",
    "link": "<1> <2>Pug documentation</2> </1> <3> <4>Learn X in Y minutes, where X=Pug</4> </3> <5> <6>LiveCodes Documentations</6> </5>",
    "name": "Pug"
  },
  "python": {
    "desc": "Python running in the browser using Brython.",
    "link": "<1> <2>Python official website</2> </1> <3> <4>Python documentation</4> </3> <5> <6>Brython documentation</6> </5> <7> <8>Learn X in Y minutes, where X=Python</8> </7> <9> <10>LiveCodes Documentations</10> </9> <11> <12>Load starter template</12> </11>",
    "name": "Python"
  },
  "pythonWasm": {
    "desc1": "Python with the scientific stack, compiled to WebAssembly using Pyodide.",
    "desc2": "Pyodide allows using Python scientific stack including NumPy, Pandas, Matplotlib, SciPy, scikit-learn and many more. In addition it’s possible to install pure Python wheels from PyPi.",
    "link": "<1> <2>Python official website</2> </1> <3> <4>Python documentation</4> </3> <5><6>Pyodide documentation</6></5> <7> <8>Learn X in Y minutes, where X=Python</8> </7> <9> <10>LiveCodes Documentations</10> </9> <11> <12>Load starter template</12> </11>",
    "name": "Python (Wasm)"
  },
  "r": {
    "desc": "R running in the browser using WebR.",
    "link": "<1> <2>R project official website</2> </1> <3> <4>The R Manuals</4> </3> <5> <6>R for Data Science (2e)</6> </5> <7> <8>WebR documentation</8> </7> <9> <10>Learn X in Y minutes, where X=R</10> </9> <11> <12>LiveCodes Documentations</12> </11> <13> <14>Load starter template</14> </13>",
    "name": "R"
  },
  "reactNative": {
    "desc": "React Native for Web is an accessible implementation of React Native's Components and APIs that is interoperable with React DOM.",
    "link": "<1> <2>React official website</2> </1> <3> <4>React Native website</4> </3> <5> <6>React Native for Web website</6> </5> <7> <8>React Native documentation</8> </7> <9> <10>LiveCodes Documentations</10> </9> <11> <12>Load starter template</12> </11>",
    "name": "React Native for Web"
  },
  "reactNativeTsx": {
    "desc": "React Native for Web is an accessible implementation of React Native's Components and APIs that is interoperable with React DOM.",
    "link": "<1> <2>React official website</2> </1> <3> <4>React Native website</4> </3> <5> <6>React Native for Web website</6> </5> <7> <8>React Native documentation</8> </7> <9> <10>TypeScript website</10> </9> <11> <12>TypeScript documentation</12> </11> <13> <14>LiveCodes Documentations</14> </13> <15> <16>Load starter template (JSX)</16> </15>",
    "name": "React Native for Web (with TypeScript)"
  },
  "reason": {
    "desc1": "Reason lets you write simple, fast and quality type safe code while leveraging both the JavaScript & OCaml ecosystems.",
    "desc2": "ReScript compiler is used here to compile Reason to JavaScript.",
    "link": "<1><2>Reason website</2></1> <3> <4>Reason documentation</4> </3> <5> <6>ReasonReact</6> </5> <7> <8>ReScript website</8> </7> <9> <10>Learn X in Y minutes, where X=reason</10> </9> <11> <12>Load starter template</12> </11>",
    "name": "Reason"
  },
  "rescript": {
    "desc": "ReScript is a robustly typed language that compiles to efficient and human-readable JavaScript.",
    "link": "<1> <2>ReScript website</2> </1> <3> <4>ReScript / React</4> </3> <5> <6>Load starter template</6> </5>",
    "name": "ReScript"
  },
  "richtext": {
    "desc1": "Using Quill:",
    "desc2": "Your powerful rich text editor.",
    "link": "<1> <2>Quill official website</2> </1>",
    "name": "Rich Text Editor"
  },
  "riot": {
    "desc": "Simple and elegant component-based UI library.",
    "link": "<1> <2>Riot.js official website</2> </1> <3> <4>Riot.js documentation</4> </3> <5> <6>Load starter template</6> </5>",
    "name": "Riot.js"
  },
  "ruby": {
    "desc": "Ruby running in the browser using Opal.",
    "link": "<1> <2>Ruby official website</2> </1> <3> <4>Ruby documentation</4> </3> <5><6>Opal official website</6></5> <7> <8>Opal standard library CDN</8> </7> <9> <10>Learn X in Y minutes, where X=ruby</10> </9> <11> <12>LiveCodes Documentations</12> </11> <13> <14>Load starter template</14> </13>",
    "name": "Ruby"
  },
  "rubyWasm": {
    "desc": "Ruby running in the browser using ruby-wasm (a collection of WebAssembly ports of the CRuby).",
    "link": "<1> <2>Ruby official website</2> </1> <3> <4>Ruby documentation</4> </3> <5> <6>ruby.wasm website</6> </5> <7><8>CRuby</8></7> <9> <10>Learn X in Y minutes, where X=ruby</10> </9> <11> <12>LiveCodes Documentations</12> </11> <13> <14>Load starter template</14> </13>",
    "name": "Ruby (WASM)"
  },
  "sass": {
    "desc": "Syntactically Awesome Style Sheets.",
    "link": "<1> <2>Sass official website</2> </1> <3> <4>Sass documentation</4> </3> <5> <6>Sass (the indented) syntax</6> </5> <7> <8>Learn X in Y minutes, where X=sass</8> </7>",
    "name": "Sass"
  },
  "scheme": {
    "desc": "Scheme running in the browser using biwascheme.",
    "link": "<1> <2>The Scheme Programming Language</2> </1> <3> <4>BiwaScheme official website</4> </3> <5> <6>BiwaScheme reference</6> </5> <7> <8>Load starter template</8> </7>",
    "name": "Scheme"
  },
  "scss": {
    "desc": "Syntactically Awesome Style Sheets.",
    "link": "<1> <2>Sass official website</2> </1> <3> <4>Sass documentation</4> </3> <5> <6>SCSS syntax</6> </5> <7> <8>Learn X in Y minutes, where X=sass</8> </7>",
    "name": "SCSS"
  },
  "solid": {
    "desc": "A declarative, efficient and flexible JavaScript library for building user interfaces.",
    "link": "<1><2>Official website</2></1> <3><4>Documentation</4></3> <5> <6>LiveCodes Documentations</6> </5> <7> <8>Load starter template (TSX)</8> </7>",
    "name": "Solid",
    "tsx": {
      "desc": "A declarative, efficient and flexible JavaScript library for building user interfaces.",
      "link": "<1><2>Official website</2></1> <3> <4>Solid documentation</4> </3> <5> <6>TypeScript website</6> </5> <7> <8>TypeScript documentation</8> </7> <9> <10>LiveCodes Documentations</10> </9> <11> <12>Load starter template</12> </11>",
      "name": "Solid (with TypeScript)"
    }
  },
  "sql": {
    "desc": "SQLite compiled to JavaScript using SQL.js",
    "link": "<1> <2>SQLite official website</2> </1> <3> <4>SQLite syntax documentation</4> </3> <5> <6>SQL.js official website</6> </5> <7> <8>Learn X in Y minutes, where X=SQL</8> </7> <9> <10>Load starter template</10> </9>",
    "name": "SQLite"
  },
  "stencil": {
    "desc": "A Compiler for Web Components and High Performance Web Apps.",
    "link": "<1> <2>Stencil official website</2> </1> <3> <4>Stencil documentation</4> </3> <5> <6>Load starter template</6> </5>",
    "name": "Stencil"
  },
  "styleProcessors": {
    "link": "<1> <2>Tailwind CSS</2> </1> <3> <4>Windi CSS</4> </3> <5> <6>UnoCSS</6> </5> <7> <8>Lightning CSS</8> </7> <9> <10>PostCSS</10> Plugins: <11> <12> <13>Autoprefixer</13> </12> <14> <15>postcss-preset-env</15> </14> <16> <17>postcss-import-url</17> </16> <18> <19>postcss-modules</19> </18> </11> </9>",
    "name": "CSS Frameworks and Processors"
  },
  "stylis": {
    "desc": "Light-weight css preprocessor.",
    "link": "<1> <2>Stylis official website</2> </1>",
    "name": "Stylis"
  },
  "stylus": {
    "desc": "Expressive, Dynamic, Robust CSS.",
    "link": "<1> <2>Stylus official website</2> </1> <3> <4>Learn X in Y minutes, where X=stylus</4> </3>",
    "name": "Stylus"
  },
  "sucrase": {
    "desc": "Super-fast alternative to Babel for when you can target modern JS runtimes.",
    "link": "<1> <2>Sucrase official website</2> </1> <3> <4>Sucrase GitHub Repo</4> </3> <5> <6>LiveCodes Documentations</6> </5>",
    "name": "Sucrase"
  },
  "svelte": {
    "desc": "Cybernetically enhanced web apps.",
    "link": "<1> <2>Svelte official website</2> </1> <3> <4>Svelte documentation</4> </3> <5> <6>Load starter template</6> </5>",
    "name": "Svelte"
  },
  "tcl": {
    "desc": "Tcl running in the browser, using <1>wacl</1>.",
    "link": "<1> <2>Tcl official website</2> </1> <3> <4>wacl repo</4> </3> <5> <6>Learn X in Y minutes, where X=Tcl</6> </5> <7> <8>Load starter template</8> </7>",
    "name": "Tcl (Tool Command Language)"
  },
  "teal": {
    "desc": "A typed dialect of Lua.",
    "link": "<1> <2>Teal GitHub repo</2> </1> <3> <4>Teal docs</4> </3> <5> <6>Teal tutorial</6> </5> <7> <8>LiveCodes Documentations</8> </7> <9> <10>Load starter template</10> </9>",
    "name": "Teal"
  },
  "tsx": {
    "desc": "TypeScript in JSX. TSX is compiled to JavaScript in LiveCodes using the TypeScript Compiler. By default it uses React as the JSX runtime.",
    "link": "<1> <2>React official website</2> </1> <3> <4>JSX in React documentation</4> </3> <5> <6>Typescript documentation</6> </5> <7> <8>LiveCodes Documentations</8> </7>",
    "name": "TSX"
  },
  "twig": {
    "desc": "A JavaScript implementation of the <1>Twig</1> PHP templating language by <2>Twig.js</2>",
    "link": "<1> <2>Twig official website</2> </1> <3> <4>Twig Documentation</4> </3> <5> <6>Twig.js Repo</6> </5> <7> <8>Twig.js Documentation</8> </7> <9> <10>LiveCodes Documentations</10> </9>",
    "name": "Twig"
  },
  "typescript": {
    "desc": "A Typed Superset of JavaScript.",
    "link": "<1> <2>Official website</2> </1> <3> <4>TypeScript documentation</4> </3> <5> <6>Learn X in Y minutes, where X=TypeScript</6> </5> <7> <8>Load starter template</8> </7>",
    "name": "TypeScript"
  },
  "vue": {
    "link": "<1> <2>Vue.js v3 official website</2> </1> <3> <4>Vue3 documentation</4> </3> <5> <6>Vue3 single file components</6> </5> <7> <8>LiveCodes Documentations</8> </7> <9> <10>Load starter template</10> </9>",
    "name": "Vue3 Single File Components"
  },
  "vue2": {
    "desc": "Loaded using vue3-sfc-loader.",
    "link": "<1><2>Vue.js official website</2></1> <3> <4>Vue2 documentation</4> </3> <5> <6>Vue2 single file components</6> </5> <7> <8>vue3-sfc-loader GitHub repo</8> </7> <9> <10>LiveCodes Documentations</10> </9>",
    "name": "Vue2 Single File Components"
  },
  "wat": {
    "desc1": "Low-level textual representation of the WebAssembly (wasm) binary format.",
    "desc2": "It is converted to wasm using wabt.js.",
    "link": "<1><2>WebAssembly.org</2></1> <3> <4>WebAssembly Text Specs</4> </3> <5> <6>WebAssembly on MDN</6> </5> <7> <8>Understanding WebAssembly text format</8> </7> <9> <10>wabt.js documentation</10> </9> <11> <12>Learn X in Y minutes, where X=WebAssembly</12> </11> <13> <14>Load starter template</14> </13>",
    "name": "WebAssembly Text Format"
  }
}