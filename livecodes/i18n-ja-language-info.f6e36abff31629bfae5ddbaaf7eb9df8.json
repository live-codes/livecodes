{
  "artTemplate": {
    "desc": "高性能な JavaScript テンプレートエンジン。",
    "link": "<1> <2>art-template 公式ウェブサイト</2> </1> <3> <4>art-template ドキュメント</4> </3>",
    "name": "art-template"
  },
  "asciidoc": {
    "desc": "Asciidoctor を使用して HTML にコンパイルされた AsciiDoc。",
    "link": "<1> <2>AsciiDoc 公式ウェブサイト</2> </1> <3> <4>Asciidoctor 公式ウェブサイト</4> </3> <5> <6>Asciidoctor ドキュメント</6> </5> <7> <8>X分でYを学ぶ、X=asciidoc</8> </7>",
    "name": "AsciiDoc"
  },
  "assemblyscript": {
    "desc": "WebAssembly 用の TypeScript に似た言語。",
    "link": "<1> <2>AssemblyScript 公式ウェブサイト</2> </1> <3> <4>AssemblyScript ドキュメント</4> </3> <5> <6>スターターテンプレートを読み込む</6> </5>",
    "name": "AssemblyScript"
  },
  "astro": {
    "desc": "クライアントサイドの JavaScript を減らしてより高速なウェブサイトを構築します。（まだベータ版）",
    "link": "<1> <2>Astro 公式ウェブサイト</2> </1> <3> <4>Astro ドキュメント</4> </3> <5> <6>スターターテンプレートを読み込む</6> </5>",
    "name": "Astro"
  },
  "babel": {
    "desc": "JavaScript コンパイラ",
    "link": "<1><2>公式ウェブサイト</2></1> <3> <4>Babel ドキュメント</4> </3>",
    "name": "Babel"
  },
  "bbcode": {
    "desc": "BBCode（「Bulletin Board Code」）は、多くのインターネットフォーラムソフトウェアでメッセージをフォーマットするために使用される軽量マークアップ言語です。",
    "link": "<1><2>bbcode.org</2></1> <3> <4>BBCode ガイド</4> </3> <5> <6>Wikipedia の BBCode</6> </5>",
    "name": "BBCode"
  },
  "blockly": {
    "desc": "ビジュアルプログラミングエディタを構築するための JavaScript ライブラリ。",
    "link": "<1> <2>公式ウェブサイト</2> </1> <3> <4>ガイド</4> </3> <5> <6>リファレンス</6> </5> <7> <8>サンプル</8> </7> <9> <10>スターターテンプレートを読み込む</10> </9>",
    "name": "Blockly"
  },
  "civet": {
    "desc": "Civet は TypeScript または JavaScript にコンパイルされるプログラミング言語で、既存のツールを使用しながら簡潔で強力な構文を可能にします。",
    "link": "<1> <2>Civet 公式ウェブサイト</2> </1> <3> <4>Civet チートシート</4> </3> <5> <6>スターターテンプレートを読み込む</6> </5>",
    "name": "Civet"
  },
  "clio": {
    "desc": "Clio は、JavaScript にコンパイルされる高速で分散型の関数型プログラミング言語です。",
    "link": "<1> <2>Clio 公式ウェブサイト</2> </1> <3> <4>Clio ドキュメント</4> </3> <5> <6>スターターテンプレートを読み込む</6> </5>",
    "name": "Clio"
  },
  "clojurescript": {
    "desc": "ClojureScript は JavaScript をターゲットとする<1>Clojure</1>のコンパイラです。<2></2>LiveCodes では、<3>Cherry</3>を使用してブラウザで実行されます。",
    "link": "<1> <2>ClojureScript 公式ウェブサイト</2> </1> <3> <4>Clojure 公式ウェブサイト</4> </3> <5> <6>Cherry リポジトリ</6> </5> <7> <8>X分でYを学ぶ、X=clojure</8> </7> <9> <10>LiveCodes ドキュメント</10> </9> <11> <12>スターターテンプレートを読み込む</12> </11>",
    "name": "ClojureScript (CLJS)"
  },
  "coffeescript": {
    "desc": "飾り気のない JavaScript。",
    "link": "<1> <2>CoffeeScript 公式ウェブサイト</2> </1> <3> <4>X分でYを学ぶ、X=coffeescript</4> </3> <5> <6>スターターテンプレートを読み込む</6> </5>",
    "name": "CoffeeScript"
  },
  "commonlisp": {
    "desc": "JSCL（Common Lispからブートストラップされた Lisp-to-Javascript コンパイラ）を使用した JavaScript 上の Common Lisp 実装。",
    "link": "<1> <2>Common-Lisp.net</2> </1> <3> <4>JSCL プロジェクト</4> </3> <5> <6>Common Lisp リソース</6> </5> <7> <8>X分でYを学ぶ、X=Common Lisp</8> </7> <9> <10>スターターテンプレートを読み込む</10> </9>",
    "name": "Common Lisp"
  },
  "cpp": {
    "desc1": "JSCPP（JavaScript で書かれた簡単な C++ インタプリタ）を使用した C++ サポート。",
    "desc2": "これは C++ の完全な実装ではありません。詳細については<1>JSCPP ドキュメント</1>を参照してください。",
    "link": "<1> <2>Standard C++ 財団</2> </1> <3> <4>JSCPP</4> </3> <5> <6>X分でYを学ぶ、X=C++</6> </5> <7> <8>スターターテンプレートを読み込む</8> </7>",
    "name": "C++"
  },
  "cppWasm": {
    "desc": "<2>polylang.io</2>によって適応された<1>wasm-clang</1>を使用して、WebAssembly上で動作するClang C/C++コンパイラ。",
    "link": "<1> <2>Standard C++ 財団</2> </1> <3> <4>Clang 公式ウェブサイト</4> </3> <5> <6>X分でYを学ぶ、X=C++</6> </5> <7> <8>スターターテンプレートを読み込む</8> </7>",
    "name": "C/C++ (Wasm)"
  },
  "diagrams": {
    "desc1": "（実験的）",
    "desc2": "コードとしての図表。サポート：",
    "desc3": "<1> <2>Cytoscape</2> </1> <3> <4>ELK</4> (<5>elkjs</5>を使用) </3> <6> <7>Gnuplot</7> (<8>gnuplot-JS</8>を使用) </6> <9> <10>Graphviz</10> (<11>@hpcc-js/wasm</11>を使用) </9> <12> <13>Mermaid</13> </12> <14> <15>Nomnoml</15> </14> <16> <17>Pintora</17> </16> <18> <19>Plotly</19> </18> <20> <21>Svgbob</21> </20> <22> <23>Vega</23> </22> <24> <25>VegaLite</25> </24> <26> <27>WaveDrom</27> </26>",
    "link": "<1> <2>スターターテンプレートを読み込む</2> </1> <3> <4>LiveCodes ドキュメント</4> </3>",
    "name": "ダイアグラム"
  },
  "dot": {
    "desc": "Node.js とブラウザ向けの最速かつ簡潔な JavaScript テンプレートエンジン。",
    "link": "<1> <2>公式ウェブサイト</2> </1> <3> <4>LiveCodes ドキュメント</4> </3>",
    "name": "doT.js"
  },
  "ejs": {
    "desc": "埋め込み JavaScript テンプレート。",
    "link": "<1><2>公式ウェブサイト</2></1> <3> <4>LiveCodes ドキュメント</4> </3>",
    "name": "EJS"
  },
  "eta": {
    "desc": "Node、Deno、ブラウザ用の埋め込み JS テンプレートエンジン。軽量、高速、プラガブル。TypeScript で書かれています。",
    "link": "<1><2>公式ウェブサイト</2></1> <3> <4>ドキュメント</4> </3> <5> <6>LiveCodes ドキュメント</6> </5>",
    "name": "Eta"
  },
  "fennel": {
    "desc": "Fennel は、Lua のスピード、シンプルさ、リーチと、Lisp 構文とマクロシステムの柔軟性を組み合わせたプログラミング言語です。",
    "link": "<1> <2>Fennel 公式ウェブサイト</2> </1> <3> <4>Fennel 入門</4> </3> <5> <6>LiveCodes ドキュメント</6> </5> <7> <8>スターターテンプレートを読み込む</8> </7>",
    "name": "Fennel"
  },
  "flow": {
    "desc": "Flow は JavaScript 用の静的型チェッカーです。",
    "link": "<1> <2>Flow 公式ウェブサイト</2> </1> <3> <4>Flow ドキュメント</4> </3>",
    "name": "Flow"
  },
  "gleam": {
    "desc1": "Gleam は、スケーラブルな型安全システムを構築するためのフレンドリーな言語です！",
    "desc2": "Gleam は静的型付け関数型プログラミング言語で、Erlang または JavaScript にコンパイルされます。",
    "link": "<1><2>Gleam ウェブサイト</2></1> <3> <4>Gleam ドキュメント</4> </3> <5> <6>Gleam 言語ツアー</6> </5> <7> <8>スターターテンプレートを読み込む</8> </7>",
    "name": "Gleam"
  },
  "go": {
    "desc1": "Go（Golang）は、シンプルで信頼性が高く効率的なソフトウェアを簡単に構築できるオープンソースのプログラミング言語です。",
    "desc2": "ここでは、GopherJS を使用して JavaScript にコンパイルされます。",
    "link": "<1><2>Go ウェブサイト</2></1> <3><4>Go ドキュメント</4></3> <5> <6>GopherJS リポジトリ</6> </5> <7> <8>X分でYを学ぶ、X=Go</8> </7> <9><10>スターターテンプレートを読み込む</10></9>",
    "name": "Go"
  },
  "haml": {
    "desc": "clientside-haml-js を使用したクライアントサイド JavaScript ビューテンプレート用の Haml コンパイラ。",
    "link": "<1><2>Haml 公式ウェブサイト</2></1> <3> <4>Haml ドキュメント</4> </3> <5> <6>clientside-haml-js GitHub リポジトリ</6> </5> <7> <8>X分でYを学ぶ、X=haml</8> </7> <9> <10>LiveCodes ドキュメント</10> </9>",
    "name": "Haml"
  },
  "handlebars": {
    "desc": "ステロイドを使用したミニマルなテンプレートエンジン。",
    "link": "<1><2>公式ウェブサイト</2></1> <3> <4>LiveCodes ドキュメント</4> </3>",
    "name": "Handlebars"
  },
  "imba": {
    "desc": "フレンドリーなフルスタック言語。",
    "link": "<1><2>公式ウェブサイト</2></1>",
    "name": "Imba"
  },
  "jsx": {
    "desc": "JSX は LiveCodes で TypeScript コンパイラを使用して JavaScript にコンパイルされます。デフォルトでは React を JSX ランタイムとして使用します。",
    "link": "<1> <2>React 公式ウェブサイト</2> </1> <3> <4>React ドキュメントの JSX</4> </3> <5> <6>LiveCodes ドキュメント</6> </5> <7> <8>スターターテンプレートを読み込む</8> </7>",
    "name": "JSX"
  },
  "julia": {
    "desc1": "（LiveCodes での Julia 言語サポートはまだ実験的です）",
    "desc2": "<2>polylang.io</2>によって適応された<1>julia-wasm</1>を使用して、WASM上で動作するJuliaコンパイラとJulia Base。",
    "link": "<1> <2>Julia 公式ウェブサイト</2> </1> <3> <4>Julia ドキュメント</4> </3> <5> <6>X分でYを学ぶ、X=Julia</6> </5> <7> <8>スターターテンプレートを読み込む</8> </7>",
    "name": "Julia"
  },
  "less": {
    "desc": "CSS に少し機能を追加したもの。",
    "link": "<1><2>Less 公式ウェブサイト</2></1> <3> <4>X分でYを学ぶ、X=less</4> </3>",
    "name": "Less"
  },
  "liquid": {
    "desc": "シンプルで表現力豊かで安全なテンプレートエンジン。",
    "link": "<1> <2>LiquidJS 公式ウェブサイト</2> </1> <3> <4>LiquidJS ドキュメント</4> </3> <5> <6>LiveCodes ドキュメント</6> </5>",
    "name": "LiquidJS"
  },
  "livescript": {
    "desc": "JavaScript にコンパイルされる言語。",
    "link": "<1> <2>LiveScript 公式ウェブサイト</2> </1> <3> <4>X分でYを学ぶ、X=LiveScript</4> </3> <5> <6>スターターテンプレートを読み込む</6> </5>",
    "name": "LiveScript"
  },
  "lua": {
    "desc": "fengari-web を使用してブラウザで動作する Lua。",
    "link": "<1><2>Lua 公式ウェブサイト</2></1> <3> <4>Lua ドキュメント</4> </3> <5> <6>Fengari 公式ウェブサイト</6> </5> <7> <8>fengari-web GitHub リポジトリ</8> </7> <9> <10>X分でYを学ぶ、X=Lua</10> </9> <11> <12>LiveCodes ドキュメント</12> </11> <13><14>スターターテンプレートを読み込む</14></13>",
    "name": "Lua"
  },
  "luaWasm": {
    "desc": "WebAssembly で作成された JS バインディングを持つ実際の Lua 5.4 VM である Wasmoon を使用してブラウザで動作する Lua。",
    "link": "<1><2>Lua 公式ウェブサイト</2></1> <3> <4>Lua ドキュメント</4> </3> <5> <6>Wasmoon GitHub リポジトリ</6> </5> <7> <8>X分でYを学ぶ、X=Lua</8> </7> <9> <10>LiveCodes ドキュメント</10> </9> <11> <12>スターターテンプレートを読み込む</12> </11>",
    "name": "Lua (Wasm)"
  },
  "malina": {
    "desc": "Svelte にインスパイアされたフロントエンドコンパイラ。",
    "link": "<1> <2>Malina.js リポジトリ</2> </1> <3> <4>Malina.js ドキュメント</4> </3> <5> <6>スターターテンプレートを読み込む</6> </5>",
    "name": "Malina.js"
  },
  "markdown": {
    "desc": "Marked を使用して HTML にコンパイルされた Markdown。",
    "link": "<1> <2>Markdown 公式ウェブサイト</2> </1> <3> <4>Marked ドキュメント</4> </3> <5> <6>X分でYを学ぶ、X=markdown</6> </5> <7> <8>スターターテンプレートを読み込む</8> </7>",
    "name": "Markdown"
  },
  "mdx": {
    "desc": "コンポーネント時代の Markdown。<1></1>MDX を使用すると、Markdown ドキュメント内でシームレスに JSX を記述できます。",
    "link": "<1><2>MDX ドキュメント</2></1> <3><4>スターターテンプレートを読み込む</4></3>",
    "name": "MDX"
  },
  "mjml": {
    "desc": "MJML は、レスポンシブなメールのコーディングの苦痛を軽減するために設計されたマークアップ言語です。",
    "link": "<1><2>MJML 公式ウェブサイト</2></1> <3> <4>MJML ドキュメント</4> </3> <5> <6>MJML 公式テンプレート</6> </5> <7> <8>LiveCodes ドキュメント</8> </7>",
    "name": "MJML"
  },
  "mustache": {
    "desc": "ロジックレステンプレート。",
    "link": "<1> <2>公式ウェブサイト</2> </1> <3> <4>mustache(5) マニュアル</4> </3> <5> <6>JavaScript 実装</6> </5> <7> <8>LiveCodes ドキュメント</8> </7>",
    "name": "Mustache"
  },
  "nunjucks": {
    "desc": "JavaScript 用の豊富で強力なテンプレート言語。Nunjucks は本質的に<1>jinja2</1>のポートです。",
    "link": "<1> <2>公式ウェブサイト</2> </1> <3> <4>LiveCodes ドキュメント</4> </3>",
    "name": "Nunjucks"
  },
  "ocaml": {
    "desc1": "OCaml は、関数型、命令型、オブジェクト指向スタイルをサポートする産業用プログラミング言語です。",
    "desc2": "ここでは、OCaml を JavaScript にコンパイルするために ReScript コンパイラが使用されています。",
    "link": "<1><2>OCaml ウェブサイト</2></1> <3> <4>OCaml ドキュメント</4> </3> <5> <6>ReScript ウェブサイト</6> </5> <7> <8>X分でYを学ぶ、X=OCaml</8> </7> <9> <10>スターターテンプレートを読み込む</10> </9>",
    "name": "OCaml"
  },
  "perl": {
    "desc": "Perlito を使用してブラウザで動作する Perl。",
    "link": "<1> <2>Perl 公式ウェブサイト</2> </1> <3> <4>Perl ドキュメント</4> </3> <5> <6>Perlito5 Readme</6> </5> <7> <8>X分でYを学ぶ、X=perl</8> </7> <9> <10>スターターテンプレートを読み込む</10> </9>",
    "name": "Perl"
  },
  "php": {
    "desc": "Uniter を使用してブラウザで動作する PHP。",
    "link": "<1><2>PHP 公式ウェブサイト</2></1> <3> <4>PHP ドキュメント</4> </3> <5> <6>Uniter GitHub リポジトリ</6> </5> <7> <8>X分でYを学ぶ、X=PHP</8> </7> <9> <10>LiveCodes ドキュメント</10> </9> <11><12>スターターテンプレートを読み込む</12></11>",
    "name": "PHP"
  },
  "phpWasm": {
    "desc": "php-wasm を使用し、WebAssembly を利用したブラウザ内の PHP。",
    "link": "<1><2>PHP 公式ウェブサイト</2></1> <3> <4>PHP ドキュメント</4> </3> <5> <6>php-wasm GitHub リポジトリ</6> </5> <7> <8>X分でYを学ぶ、X=PHP</8> </7> <9> <10>LiveCodes ドキュメント</10> </9> <11> <12>スターターテンプレートを読み込む</12> </11>",
    "name": "PHP (Wasm)"
  },
  "postgresql": {
    "desc": "PGlite を使用して WASM としてパッケージ化された PostgreSQL",
    "link": "<1> <2>PostgreSQL 公式ウェブサイト</2> </1> <3> <4>PostgreSQL ドキュメント</4> </3> <5> <6>PGlite GitHub リポジトリ</6> </5> <7> <8>X分でYを学ぶ、X=SQL</8> </7> <9> <10>スターターテンプレートを読み込む</10> </9>",
    "name": "PostgreSQL"
  },
  "prolog": {
    "desc": "JavaScript で書かれたオープンソースの Prolog インタプリタ。",
    "link": "<1> <2>Tau Prolog 公式ウェブサイト</2> </1> <3> <4>Tau Prolog ドキュメント</4> </3> <5> <6>SWI-Prolog</6> </5> <7> <8>X分でYを学ぶ、X=Prolog</8> </7> <9> <10>スターターテンプレートを読み込む</10> </9>",
    "name": "Tau Prolog"
  },
  "pug": {
    "desc": "堅牢で、エレガントで、機能豊富なテンプレートエンジン。",
    "link": "<1> <2>Pug ドキュメント</2> </1> <3> <4>X分でYを学ぶ、X=Pug</4> </3> <5> <6>LiveCodes ドキュメント</6> </5>",
    "name": "Pug"
  },
  "python": {
    "desc": "Brython を使用してブラウザで動作する Python。",
    "link": "<1> <2>Python 公式ウェブサイト</2> </1> <3> <4>Python ドキュメント</4> </3> <5> <6>Brython ドキュメント</6> </5> <7> <8>X分でYを学ぶ、X=Python</8> </7> <9> <10>LiveCodes ドキュメント</10> </9> <11> <12>スターターテンプレートを読み込む</12> </11>",
    "name": "Python"
  },
  "pythonWasm": {
    "desc1": "Pyodide を使用して WebAssembly にコンパイルされた科学計算スタック付きの Python。",
    "desc2": "Pyodide を使用すると、NumPy、Pandas、Matplotlib、SciPy、scikit-learn などを含む Python の科学計算スタックを使用できます。さらに、PyPi からピュアな Python ホイールをインストールすることも可能です。",
    "link": "<1> <2>Python 公式ウェブサイト</2> </1> <3> <4>Python ドキュメント</4> </3> <5><6>Pyodide ドキュメント</6></5> <7> <8>X分でYを学ぶ、X=Python</8> </7> <9> <10>LiveCodes ドキュメント</10> </9> <11> <12>スターターテンプレートを読み込む</12> </11>",
    "name": "Python (Wasm)"
  },
  "r": {
    "desc": "WebRを使用してブラウザで実行されるR。",
    "link": "<1> <2>Rプロジェクト公式ウェブサイト</2> </1> <3> <4>Rマニュアル</4> </3> <5> <6>Rによるデータサイエンス（第2版）</6> </5> <7> <8>WebRドキュメント</8> </7> <9> <10>X分でわかるR（X in Y minutes）</10> </9> <11> <12>LiveCodesドキュメント</12> </11> <13> <14>スターターテンプレートを読み込む</14> </13>",
    "name": "R"
  },
  "reactNative": {
    "desc": "React Native for WebはReact DOMと相互運用可能なReact NativeのコンポーネントとAPIのアクセシブルな実装です。",
    "link": "<1> <2>React公式ウェブサイト</2> </1> <3> <4>React Nativeウェブサイト</4> </3> <5> <6>React Native for Webウェブサイト</6> </5> <7> <8>React Nativeドキュメント</8> </7> <9> <10>LiveCodesドキュメント</10> </9> <11> <12>スターターテンプレートを読み込む</12> </11>",
    "name": "React Native for Web"
  },
  "reactNativeTsx": {
    "desc": "React Native for WebはReact DOMと相互運用可能なReact NativeのコンポーネントとAPIのアクセシブルな実装です。",
    "link": "<1> <2>React公式ウェブサイト</2> </1> <3> <4>React Nativeウェブサイト</4> </3> <5> <6>React Native for Webウェブサイト</6> </5> <7> <8>React Nativeドキュメント</8> </7> <9> <10>TypeScriptウェブサイト</10> </9> <11> <12>TypeScriptドキュメント</12> </11> <13> <14>LiveCodesドキュメント</14> </13> <15> <16>スターターテンプレートを読み込む（JSX）</16> </15>",
    "name": "React Native for Web（TypeScript使用）"
  },
  "reason": {
    "desc1": "ReasonはJavaScriptとOCamlの両方のエコシステムを活用しながら、シンプルで高速かつ品質の高い型安全なコードを書くことができます。",
    "desc2": "ここではReasonをJavaScriptにコンパイルするためにReScriptコンパイラが使用されています。",
    "link": "<1><2>Reasonウェブサイト</2></1> <3> <4>Reasonドキュメント</4> </3> <5> <6>ReasonReact</6> </5> <7> <8>ReScriptウェブサイト</8> </7> <9> <10>X分でわかるReason（X in Y minutes）</10> </9> <11> <12>スターターテンプレートを読み込む</12> </11>",
    "name": "Reason"
  },
  "rescript": {
    "desc": "ReScriptは、効率的で読みやすいJavaScriptにコンパイルされる堅牢に型付けされた言語です。",
    "link": "<1> <2>ReScriptウェブサイト</2> </1> <3> <4>ReScript / React</4> </3> <5> <6>スターターテンプレートを読み込む</6> </5>",
    "name": "ReScript"
  },
  "richtext": {
    "desc1": "Quillを使用：",
    "desc2": "強力なリッチテキストエディター。",
    "link": "<1> <2>Quill公式ウェブサイト</2> </1>",
    "name": "リッチテキストエディター"
  },
  "riot": {
    "desc": "シンプルでエレガントなコンポーネントベースのUIライブラリ。",
    "link": "<1> <2>Riot.js公式ウェブサイト</2> </1> <3> <4>Riot.jsドキュメント</4> </3> <5> <6>スターターテンプレートを読み込む</6> </5>",
    "name": "Riot.js"
  },
  "ruby": {
    "desc": "Opalを使用してブラウザで実行されるRuby。",
    "link": "<1> <2>Ruby公式ウェブサイト</2> </1> <3> <4>Rubyドキュメント</4> </3> <5><6>Opal公式ウェブサイト</6></5> <7> <8>Opal標準ライブラリCDN</8> </7> <9> <10>X分でわかるRuby（X in Y minutes）</10> </9> <11> <12>LiveCodesドキュメント</12> </11> <13> <14>スターターテンプレートを読み込む</14> </13>",
    "name": "Ruby"
  },
  "rubyWasm": {
    "desc": "ruby-wasm（CRubyのWebAssemblyポートのコレクション）を使用してブラウザで実行されるRuby。",
    "link": "<1> <2>Ruby公式ウェブサイト</2> </1> <3> <4>Rubyドキュメント</4> </3> <5> <6>ruby.wasmウェブサイト</6> </5> <7><8>CRuby</8></7> <9> <10>X分でわかるRuby（X in Y minutes）</10> </9> <11> <12>LiveCodesドキュメント</12> </11> <13> <14>スターターテンプレートを読み込む</14> </13>",
    "name": "Ruby（WASM）"
  },
  "sass": {
    "desc": "構文的にすばらしいスタイルシート。",
    "link": "<1> <2>Sass公式ウェブサイト</2> </1> <3> <4>Sassドキュメント</4> </3> <5> <6>Sass（インデント）構文</6> </5> <7> <8>X分でわかるSass（X in Y minutes）</8> </7>",
    "name": "Sass"
  },
  "scheme": {
    "desc": "biwaschemeを使用してブラウザで実行されるScheme。",
    "link": "<1> <2>Schemeプログラミング言語</2> </1> <3> <4>BiwaScheme公式ウェブサイト</4> </3> <5> <6>BiwaSchemeリファレンス</6> </5> <7> <8>スターターテンプレートを読み込む</8> </7>",
    "name": "Scheme"
  },
  "scss": {
    "desc": "構文的にすばらしいスタイルシート。",
    "link": "<1> <2>Sass公式ウェブサイト</2> </1> <3> <4>Sassドキュメント</4> </3> <5> <6>SCSS構文</6> </5> <7> <8>X分でわかるSass（X in Y minutes）</8> </7>",
    "name": "SCSS"
  },
  "solid": {
    "desc": "ユーザーインターフェースを構築するための宣言的、効率的、柔軟なJavaScriptライブラリ。",
    "link": "<1><2>公式ウェブサイト</2></1> <3><4>ドキュメント</4></3> <5> <6>LiveCodesドキュメント</6> </5> <7> <8>スターターテンプレートを読み込む（TSX）</8> </7>",
    "name": "Solid",
    "tsx": {
      "desc": "ユーザーインターフェースを構築するための宣言的、効率的、柔軟なJavaScriptライブラリ。",
      "link": "<1><2>公式ウェブサイト</2></1> <3> <4>Solidドキュメント</4> </3> <5> <6>TypeScriptウェブサイト</6> </5> <7> <8>TypeScriptドキュメント</8> </7> <9> <10>LiveCodesドキュメント</10> </9> <11> <12>スターターテンプレートを読み込む</12> </11>",
      "name": "Solid（TypeScript使用）"
    }
  },
  "sql": {
    "desc": "SQL.js を使用して JavaScript にコンパイルされた SQLite",
    "link": "<1> <2>SQLite 公式ウェブサイト</2> </1> <3> <4>SQLite 構文ドキュメント</4> </3> <5> <6>SQL.js 公式ウェブサイト</6> </5> <7> <8>X分でYを学ぶ、X=SQL</8> </7> <9><10>スターターテンプレートを読み込む</10></9>",
    "name": "SQLite"
  },
  "stencil": {
    "desc": "Web コンポーネントと高性能 Web アプリのためのコンパイラ。",
    "link": "<1> <2>Stencil 公式ウェブサイト</2> </1> <3> <4>Stencil ドキュメント</4> </3> <5> <6>スターターテンプレートを読み込む</6> </5>",
    "name": "Stencil"
  },
  "styleProcessors": {
    "link": "<1> <2>Tailwind CSS</2> </1> <3> <4>Windi CSS</4> </3> <5> <6>UnoCSS</6> </5> <7> <8>Lightning CSS</8> </7> <9> <10>PostCSS</10> プラグイン: <11> <12> <13>Autoprefixer</13> </12> <14> <15>postcss-preset-env</15> </14> <16> <17>postcss-import-url</17> </16> <18> <19>postcss-modules</19> </18> </11> </9>",
    "name": "CSS フレームワークとプロセッサ"
  },
  "stylis": {
    "desc": "軽量な CSS プリプロセッサ。",
    "link": "<1> <2>Stylis 公式ウェブサイト</2> </1>",
    "name": "Stylis"
  },
  "stylus": {
    "desc": "表現力豊かで、動的で、堅牢な CSS。",
    "link": "<1> <2>Stylus 公式ウェブサイト</2> </1> <3> <4>X分でYを学ぶ、X=stylus</4> </3>",
    "name": "Stylus"
  },
  "sucrase": {
    "desc": "最新の JS ランタイムをターゲットにできる場合のための、超高速な Babel の代替品。",
    "link": "<1> <2>Sucrase 公式ウェブサイト</2> </1> <3> <4>Sucrase GitHub リポジトリ</4> </3> <5> <6>LiveCodes ドキュメント</6> </5>",
    "name": "Sucrase"
  },
  "svelte": {
    "desc": "サイバネティカリーに強化された Web アプリ。",
    "link": "<1> <2>Svelte 公式ウェブサイト</2> </1> <3> <4>Svelte ドキュメント</4> </3> <5> <6>スターターテンプレートを読み込む</6> </5>",
    "name": "Svelte"
  },
  "tcl": {
    "desc": "<1>wacl</1>を使用してブラウザで動作する Tcl。",
    "link": "<1> <2>Tcl 公式ウェブサイト</2> </1> <3> <4>wacl リポジトリ</4> </3> <5> <6>X分でYを学ぶ、X=Tcl</6> </5> <7> <8>スターターテンプレートを読み込む</8> </7>",
    "name": "Tcl（ツール・コマンド言語）"
  },
  "teal": {
    "desc": "Lua の型付き方言。",
    "link": "<1> <2>Teal GitHub リポジトリ</2> </1> <3> <4>Teal ドキュメント</4> </3> <5> <6>Teal チュートリアル</6> </5> <7> <8>LiveCodes ドキュメント</8> </7> <9> <10>スターターテンプレートを読み込む</10> </9>",
    "name": "Teal"
  },
  "tsx": {
    "desc": "JSX での TypeScript。TSX は LiveCodes で TypeScript コンパイラを使用して JavaScript にコンパイルされます。デフォルトでは React を JSX ランタイムとして使用します。",
    "link": "<1> <2>React 公式ウェブサイト</2> </1> <3> <4>React ドキュメントの JSX</4> </3> <5> <6>Typescript ドキュメント</6> </5> <7> <8>LiveCodes ドキュメント</8> </7>",
    "name": "TSX"
  },
  "twig": {
    "desc": "<2>Twig.js</2>による<1>Twig</1> PHP テンプレート言語の JavaScript 実装。",
    "link": "<1> <2>Twig 公式ウェブサイト</2> </1> <3> <4>Twig ドキュメント</4> </3> <5> <6>Twig.js リポジトリ</6> </5> <7> <8>Twig.js ドキュメント</8> </7> <9> <10>LiveCodes ドキュメント</10> </9>",
    "name": "Twig"
  },
  "typescript": {
    "desc": "JavaScript の型付きスーパーセット。",
    "link": "<1> <2>公式ウェブサイト</2> </1> <3> <4>TypeScript ドキュメント</4> </3> <5> <6>X分でYを学ぶ、X=TypeScript</6> </5> <7> <8>スターターテンプレートを読み込む</8> </7>",
    "name": "TypeScript"
  },
  "vue": {
    "link": "<1> <2>Vue.js v3 公式ウェブサイト</2> </1> <3> <4>Vue3 ドキュメント</4> </3> <5> <6>Vue3 単一ファイルコンポーネント</6> </5> <7> <8>LiveCodes ドキュメント</8> </7> <9><10>スターターテンプレートを読み込む</10></9>",
    "name": "Vue3 単一ファイルコンポーネント"
  },
  "vue2": {
    "desc": "vue3-sfc-loader を使用して読み込みます。",
    "link": "<1><2>Vue.js 公式ウェブサイト</2></1> <3> <4>Vue2 ドキュメント</4> </3> <5> <6>Vue2 単一ファイルコンポーネント</6> </5> <7> <8>vue3-sfc-loader GitHub リポジトリ</8> </7> <9> <10>LiveCodes ドキュメント</10> </9>",
    "name": "Vue2 単一ファイルコンポーネント"
  },
  "wat": {
    "desc1": "WebAssembly（wasm）バイナリフォーマットの低レベルテキスト表現。",
    "desc2": "wabt.js を使用して wasm に変換されます。",
    "link": "<1><2>WebAssembly.org</2></1> <3> <4>WebAssembly テキスト仕様</4> </3> <5> <6>MDN の WebAssembly</6> </5> <7> <8>WebAssembly テキストフォーマットの理解</8> </7> <9> <10>wabt.js ドキュメント</10> </9> <11> <12>X分でYを学ぶ、X=WebAssembly</12> </11> <13><14>スターターテンプレートを読み込む</14></13>",
    "name": "WebAssembly テキストフォーマット"
  }
}