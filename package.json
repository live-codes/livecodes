{
  "name": "livecodes",
  "version": "0.5.0",
  "description": "Code playground that runs in the browser",
  "author": "Hatem Hosny",
  "license": "MIT",
  "keywords": [],
  "private": true,
  "repository": {
    "url": "https://github.com/live-codes/livecodes"
  },
  "scripts": {
    "start": "run-p watch serve",
    "docs": "cd docs && npm run start",
    "serve": "live-server build --cors --wait=3000",
    "watch": "nodemon --watch src -e * --ignore 'src/*.html' --exec npm run build:app",
    "build": "run-s clean build:* copy:*",
    "build:app": "run-p build:app:* && run-s build:post:*",
    "build:app:js": "node ./scripts/build.js",
    "build:app:styles": "sass src/livecodes/styles:build/livecodes --style=compressed --no-source-map=true && postcss build/livecodes/*.css --replace --no-map --use autoprefixer",
    "build:app:html": "vite build --outDir ../build src --sourcemap true",
    "build:post:hash": "node ./scripts/hash.js",
    "build:post:inject-css": "node ./scripts/inject-css.js",
    "build:vendors": "node ./scripts/vendors.js",
    "build:ts": "tsc --emitDeclarationOnly --outFile build/livecodes/index.d.ts",
    "build:ts-lib": "tsc --emitDeclarationOnly --outFile build/lib/index.d.ts -p tsconfig.lib.json",
    "build:ts-docs": "cd docs && npm run typecheck",
    "build:docs": "cd docs && npm run build",
    "build:api-docs-livecodes": "typedoc --entryPoints src/livecodes/main.ts --entryPoints src/livecodes/app.ts --entryPoints src/livecodes/embed.ts --entryPoints src/livecodes/_modules.ts --out build/api-docs/livecodes --exclude **/*.spec.ts --plugin none",
    "build:api-docs-lib": "typedoc --entryPoints src/lib/docs.ts --out build/api-docs/lib --exclude **/*.spec.ts --plugin none",
    "copy:assets": "recursive-delete build/livecodes/assets && recursive-copy src/livecodes/assets build/livecodes/assets",
    "website:publish": "run-s build gh-pages",
    "gh-pages": "gh-pages -m \"[ci skip] Updates\" -d build",
    "fix": "run-s fix:*",
    "fix:prettier": "prettier src --ignore-path .eslintignore --write",
    "fix:eslint": "eslint --fix --ext js,jsx,ts,tsx .",
    "fix:stylelint": "stylelint --fix \"src/livecodes/styles/*\"",
    "fix:stylelint-docs": "stylelint --fix \"docs/**/*.{css,scss}\"",
    "test": "run-s test:*",
    "test:lint": "run-s lint:*",
    "test:unit": "jest src",
    "test:bundlewatch": "bundlewatch --config .bundlewatch.config.js",
    "lint:prettier": "prettier src --ignore-path .eslintignore --list-different",
    "lint:eslint": "eslint --ext js,jsx,ts,tsx . ",
    "lint:stylelint": "stylelint \"src/livecodes/styles/*\"",
    "lint:stylelint-docs": "stylelint \"docs/**/*.{css,scss}\"",
    "e2e": "playwright test",
    "ci:e2e": "playwright test --shard=$CI_SHARD_INDEX/$CI_SHARD_TOTAL",
    "cov": "run-s \"test:unit -- --coverage\"",
    "cov:send": "run-s cov && codecov",
    "release": "standard-version",
    "prepare-release": "run-s reset build test cov release",
    "reset": "git clean -dfx && git reset --hard && npm i",
    "clean": "recursive-delete build",
    "postinstall": "patch-package && cd docs && npm ci",
    "prepush:skip-e2e": "run-s fix build test:lint test:unit",
    "prepush": "run-s fix build test"
  },
  "dependencies": {
    "@codemirror/autocomplete": "0.19.9",
    "@codemirror/basic-setup": "0.19.1",
    "@codemirror/commands": "0.19.8",
    "@codemirror/highlight": "0.19.7",
    "@codemirror/history": "0.19.2",
    "@codemirror/lang-cpp": "0.19.1",
    "@codemirror/lang-css": "0.19.3",
    "@codemirror/lang-html": "0.19.4",
    "@codemirror/lang-javascript": "0.19.7",
    "@codemirror/lang-json": "0.19.1",
    "@codemirror/lang-markdown": "0.19.6",
    "@codemirror/lang-php": "0.19.1",
    "@codemirror/lang-python": "0.19.4",
    "@codemirror/lang-sql": "0.19.4",
    "@codemirror/lang-wast": "0.19.0",
    "@codemirror/language": "0.19.7",
    "@codemirror/legacy-modes": "0.19.0",
    "@codemirror/state": "0.19.6",
    "@codemirror/stream-parser": "0.19.5",
    "@codemirror/theme-one-dark": "0.19.1",
    "@codemirror/view": "0.19.42",
    "@emmetio/codemirror6-plugin": "0.0.6",
    "@snackbar/core": "1.7.0",
    "@types/deep-diff": "1.0.1",
    "codejar": "3.6.0",
    "deep-diff": "1.0.2",
    "firebase": "9.6.6",
    "luna-console": "0.2.1",
    "luna-object-viewer": "0.2.0",
    "lz-string": "1.4.4",
    "md5-file": "5.0.0",
    "monaco-editor": "0.32.1",
    "patch-package": "6.4.7",
    "prismjs": "1.26.0",
    "split.js": "1.6.5",
    "yjs": "13.5.40"
  },
  "devDependencies": {
    "@bitjson/typedoc": "0.15.0-0",
    "@cloudflare/workers-types": "3.4.0",
    "@istanbuljs/nyc-config-typescript": "1.0.1",
    "@playwright/test": "1.12.0",
    "@types/jest": "25.2.3",
    "@types/live-server": "1.2.0",
    "@types/localforage": "0.0.34",
    "@types/lz-string": "1.3.34",
    "@types/node": "14.0.4",
    "@types/prettier": "2.1.6",
    "@types/prismjs": "1.16.3",
    "@typescript-eslint/eslint-plugin": "5.11.0",
    "@typescript-eslint/parser": "5.11.0",
    "autoprefixer": "10.4.2",
    "brotli-size": "4.0.0",
    "bundlewatch": "0.3.3",
    "codecov": "3.8.3",
    "cz-conventional-changelog": "3.3.0",
    "esbuild": "0.14.45",
    "esbuild-plugin-replace": "1.2.0",
    "eslint": "8.8.0",
    "eslint-config-prettier": "8.3.0",
    "eslint-plugin-import": "2.25.4",
    "eslint-plugin-jest": "26.1.0",
    "eslint-plugin-jsdoc": "37.8.2",
    "eslint-plugin-prefer-arrow": "1.2.3",
    "gh-pages": "3.2.3",
    "jest": "27.5.1",
    "live-server": "1.2.1",
    "mkdirp": "1.0.4",
    "nodemon": "2.0.15",
    "npm-run-all": "4.1.5",
    "playwright": "1.12.0",
    "postcss": "8.4.6",
    "postcss-cli": "9.1.0",
    "prettier": "2.5.1",
    "recursive-fs": "2.1.0",
    "sass": "1.49.7",
    "standard-version": "9.3.2",
    "stylelint": "14.5.0",
    "stylelint-config-sass-guidelines": "9.0.1",
    "ts-jest": "27.1.3",
    "typedoc": "0.22.11",
    "typescript": "4.5.5",
    "vite": "2.8.0"
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "prettier": {
    "semi": true,
    "singleQuote": true,
    "trailingComma": "all",
    "printWidth": 100
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "jsdom",
    "setupFiles": [
      "<rootDir>/.jest/setup.js"
    ],
    "testPathIgnorePatterns": [
      "/node_modules/",
      "/build/",
      "/src/modules/"
    ],
    "collectCoverageFrom": [
      "src/**/*.ts",
      "!**/build/**",
      "!**/vendor/**",
      "!src/modules/**"
    ],
    "coverageReporters": [
      "json",
      "html",
      "lcov"
    ]
  }
}
